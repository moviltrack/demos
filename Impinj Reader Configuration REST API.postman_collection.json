{
	"info": {
		"_postman_id": "b1260e78-d076-4c43-8ea7-0360d9f8ef07",
		"name": "Impinj Reader Configuration REST API",
		"description": "This API provides an interface for configuring RFID operations and reporting\nstreams on Impinj Readers as well as updating Impinj Reader firmware and\nconfiguring system settings.\n\nWhen retrieved from a reader, this OpenAPI Document is dynamically updated\nbased on the capabilities of the reader. See the '/openapi.json' path.\n\n\nContact Support:\n Name: Impinj Developer Platform\n Email: developer-feedback@impinj.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4161768"
	},
	"item": [
		{
			"name": "openapi.json",
			"item": [
				{
					"name": "Get OpenAPI Document",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/openapi.json",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"openapi.json"
							]
						},
						"description": "Retrieve the OpenAPI Document for this Reader. The document describes the API using\nreader-specific capabilities and constraints, such as region-specific transmit power limits\nand supported RF Modes. It also includes definitions and paths associated with all\nregistered profiles. If the IoT Interface is disabled, this will only contain system\nendpoints.\n"
					},
					"response": [
						{
							"name": "OK.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/openapi.json",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"openapi.json"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		},
		{
			"name": "data",
			"item": [
				{
					"name": "stream",
					"item": [
						{
							"name": "Get HTTP stream",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/data/stream",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data",
										"stream"
									]
								},
								"description": "Get reader event data as an HTTP stream\n\n**Connecting**\n\nTo connect to the reader, form an HTTP request and consume the resulting stream for as long as is practical.\nThe reader will hold the connection open indefinitely, barring reader error, excessive client-side lag,\nnetwork hiccups, reader maintenance or duplicate logins. In the event there is no new data to stream for\nan extended period of time, a keep-alive CR-LF character pair will be sent. See /http-stream path.\n\nThe method to form an HTTP request and parse the response will be different for every language or\nframework, so consult the documentation for the HTTP library you are using.\n\nSome HTTP client libraries only return the response body after the connection has been closed by the server.\nThese clients will not work for accessing data via HTTP streaming. You must use an HTTP client that will return\nresponse data incrementally. Most robust HTTP client libraries will provide this functionality. The Apache\nHttpClient will handle this use case, for example.\n\n**Disconnections**\n\nThe reader will close a streaming connection for the following reasons:\n - A client establishes too many connections with the same credentials. When this occurs, the oldest connection will be terminated.\n - A client stops reading data suddenly. If the rate of tag reports being read off of the stream drops suddenly, the connection will be closed.\n - A client reads data too slowly. Every streaming connection is backed by a queue of messages to be sent to the client. If this queue grows too large over time, the connection will be closed.\n - The reader is rebooted.\n\n **Stalls**\n\n Set a timer, either a 90 second TCP level socket timeout, or a 90 second application level timer on the receipt\n of new data. If 90 seconds pass with no data received, including newlines, disconnect and reconnect immediately.\n The Streaming API will send a keep-alive periodically to prevent your application from timing out the\n connection. You should wait at least 3 cycles to prevent spurious reconnects in the event of network congestion,\n local CPU starvation, local GC pauses, etc.\n"
							},
							"response": [
								{
									"name": "OK. HTTP stream of events will be sent.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/data/stream",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data",
												"stream"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<dateTime>\",\n  \"eventType\": \"<string>\",\n  \"hostname\": \"<string>\",\n  \"tagInventoryEvent\": {\n    \"epc\": \"<string>\",\n    \"epcHex\": \"865448CED4\",\n    \"tid\": \"<string>\",\n    \"tidHex\": \"8477849\",\n    \"xpcHex\": \"31\",\n    \"antennaPort\": \"<integer>\",\n    \"antennaName\": \"..wst4dyg4p\",\n    \"transmitPowerCdbm\": \"<integer>\",\n    \"peakRssiCdbm\": \"<integer>\",\n    \"frequency\": \"<integer>\",\n    \"pc\": \"<string>\",\n    \"lastSeenTime\": \"<dateTime>\",\n    \"phaseAngle\": \"<number>\",\n    \"tagAccessPasswordWriteResponse\": {\n      \"response\": \"nonspecific-reader-error\"\n    },\n    \"tagSecurityModesWriteResponse\": {\n      \"response\": \"nonspecific-reader-error\"\n    },\n    \"tagAuthenticationResponse\": {\n      \"responseHex\": \"97A5A298E\",\n      \"messageHex\": \"FEE9A4BCB9FE\",\n      \"tidHex\": \"91D6921391D69213\"\n    },\n    \"tagMemoryData\": [\n      {\n        \"memoryBank\": \"user\",\n        \"wordOffset\": \"<integer>\",\n        \"tagDataHex\": \"F5EADE6\"\n      }\n    ]\n  },\n  \"antennaConnectedEvent\": {\n    \"antennaPort\": \"<integer>\"\n  },\n  \"antennaDisconnectedEvent\": {\n    \"antennaPort\": \"<integer>\"\n  },\n  \"inventoryStatusEvent\": {\n    \"status\": \"armed\"\n  },\n  \"antennaActivationEvent\": {\n    \"antennaPort\": \"<integer>\"\n  },\n  \"overflowEvent\": {\n    \"firstEventTimestamp\": \"<dateTime>\",\n    \"lastEventTimestamp\": \"<dateTime>\",\n    \"eventsPurged\": \"<integer>\",\n    \"eventsRemaining\": \"<integer>\"\n  }\n}"
								},
								{
									"name": "Streaming output has not been enabled on this reader.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/data/stream",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data",
												"stream"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "An internal error occurred.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/data/stream",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data",
												"stream"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "status",
			"item": [
				{
					"name": "Retrieve status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						},
						"description": "Retrieves the reader's current status.\nThis endpoint allow's a user to query what the reader is actively working on, if anything. The information\ncontained here will indicate the last request the reader responded to that resulted in it taking some modem\naction, such as starting or stopping inventory. Configuration API calls are not included.\n"
					},
					"response": [
						{
							"name": "OK.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"activePreset\": {\n    \"id\": \"_n\",\n    \"profile\": \"<string>\"\n  },\n  \"status\": \"running\",\n  \"time\": \"<dateTime>\",\n  \"serialNumber\": \"<string>\",\n  \"mqttBrokerConnectionStatus\": \"connected\",\n  \"mqttTlsAuthentication\": \"server\",\n  \"kafkaClusterConnectionStatus\": \"connected\",\n  \"eventWebhookStatus\": {\n    \"status\": \"network-error\",\n    \"httpStatusCode\": \"<integer>\",\n    \"timestamp\": \"<dateTime>\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "http-stream",
			"item": [
				{
					"name": "Retrieve HTTP stream settings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/http-stream",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"http-stream"
							]
						},
						"description": "Retrieves the configuration settings that apply to all HTTP streams."
					},
					"response": [
						{
							"name": "OK.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/http-stream",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"http-stream"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"eventBufferSize\": 0,\n  \"eventPerSecondLimit\": 0,\n  \"eventAgeLimitMinutes\": 10,\n  \"keepAliveIntervalSeconds\": 30\n}"
						}
					]
				},
				{
					"name": "Update HTTP stream settings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"eventBufferSize\": 0,\n  \"eventPerSecondLimit\": 0,\n  \"eventAgeLimitMinutes\": 10,\n  \"keepAliveIntervalSeconds\": 30\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/http-stream",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"http-stream"
							]
						},
						"description": "Updates the HTTP stream settings that apply to all HTTP streams."
					},
					"response": [
						{
							"name": "No Content. The HTTP stream settings were updated successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"eventBufferSize\": 0,\n  \"eventPerSecondLimit\": 0,\n  \"eventAgeLimitMinutes\": 10,\n  \"keepAliveIntervalSeconds\": 30\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/http-stream",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"http-stream"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request. The request body contained a request the server could not understand.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"eventBufferSize\": 0,\n  \"eventPerSecondLimit\": 0,\n  \"eventAgeLimitMinutes\": 10,\n  \"keepAliveIntervalSeconds\": 30\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/http-stream",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"http-stream"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "mqtt",
			"item": [
				{
					"name": "Retrieve MQTT settings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/mqtt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mqtt"
							]
						},
						"description": "Retrieves the current MQTT configuration settings for publishing data to an MQTT broker."
					},
					"response": [
						{
							"name": "OK.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mqtt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mqtt"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"brokerHostname\": \"<string>\",\n  \"clientId\": \"EGk7Ums\",\n  \"eventTopic\": \"a'\",\n  \"active\": false,\n  \"brokerPort\": 1883,\n  \"cleanSession\": false,\n  \"eventBufferSize\": 100000,\n  \"eventPerSecondLimit\": 0,\n  \"eventPendingDeliveryLimit\": 10,\n  \"eventQualityOfService\": 0,\n  \"keepAliveIntervalSeconds\": 0,\n  \"tlsEnabled\": false,\n  \"username\": \"\",\n  \"password\": \"\",\n  \"willTopic\": \"\",\n  \"willMessage\": \"connection lost\",\n  \"willQualityOfService\": 1,\n  \"connectMessage\": \"connected\",\n  \"disconnectMessage\": \"\"\n}"
						}
					]
				},
				{
					"name": "Update MQTT settings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brokerHostname\": \"<string>\",\n  \"clientId\": \"EGk7Ums\",\n  \"eventTopic\": \"a'\",\n  \"active\": false,\n  \"brokerPort\": 1883,\n  \"cleanSession\": false,\n  \"eventBufferSize\": 100000,\n  \"eventPerSecondLimit\": 0,\n  \"eventPendingDeliveryLimit\": 10,\n  \"eventQualityOfService\": 0,\n  \"keepAliveIntervalSeconds\": 0,\n  \"tlsEnabled\": false,\n  \"username\": \"\",\n  \"password\": \"\",\n  \"willTopic\": \"\",\n  \"willMessage\": \"connection lost\",\n  \"willQualityOfService\": 1,\n  \"connectMessage\": \"connected\",\n  \"disconnectMessage\": \"\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/mqtt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mqtt"
							]
						},
						"description": "Updates the MQTT settings used by the device."
					},
					"response": [
						{
							"name": "No Content. The MQTT settings were updated successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"brokerHostname\": \"<string>\",\n  \"clientId\": \"EGk7Ums\",\n  \"eventTopic\": \"a'\",\n  \"active\": false,\n  \"brokerPort\": 1883,\n  \"cleanSession\": false,\n  \"eventBufferSize\": 100000,\n  \"eventPerSecondLimit\": 0,\n  \"eventPendingDeliveryLimit\": 10,\n  \"eventQualityOfService\": 0,\n  \"keepAliveIntervalSeconds\": 0,\n  \"tlsEnabled\": false,\n  \"username\": \"\",\n  \"password\": \"\",\n  \"willTopic\": \"\",\n  \"willMessage\": \"connection lost\",\n  \"willQualityOfService\": 1,\n  \"connectMessage\": \"connected\",\n  \"disconnectMessage\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mqtt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mqtt"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request. The request body contained an MQTT configuration object the server could not understand.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"brokerHostname\": \"<string>\",\n  \"clientId\": \"EGk7Ums\",\n  \"eventTopic\": \"a'\",\n  \"active\": false,\n  \"brokerPort\": 1883,\n  \"cleanSession\": false,\n  \"eventBufferSize\": 100000,\n  \"eventPerSecondLimit\": 0,\n  \"eventPendingDeliveryLimit\": 10,\n  \"eventQualityOfService\": 0,\n  \"keepAliveIntervalSeconds\": 0,\n  \"tlsEnabled\": false,\n  \"username\": \"\",\n  \"password\": \"\",\n  \"willTopic\": \"\",\n  \"willMessage\": \"connection lost\",\n  \"willQualityOfService\": 1,\n  \"connectMessage\": \"connected\",\n  \"disconnectMessage\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mqtt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mqtt"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "kafka",
			"item": [
				{
					"name": "Retrieve Kafka settings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/kafka",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kafka"
							]
						},
						"description": "Retrieves the current Kafka configuration settings for pushing messages to a Kafka broker."
					},
					"response": [
						{
							"name": "OK.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kafka",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kafka"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"bootstraps\": [\n    {\n      \"hostname\": \"}\",\n      \"port\": 9092\n    }\n  ],\n  \"clientId\": \"WLUte\",\n  \"eventTopic\": \"U_CRn_\",\n  \"active\": false,\n  \"partitionKey\": \"\",\n  \"eventBatchLimit\": 8192,\n  \"eventBatchLingerMilliseconds\": 5\n}"
						}
					]
				},
				{
					"name": "Update Kafka settings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bootstraps\": [\n    {\n      \"hostname\": \"}\",\n      \"port\": 9092\n    }\n  ],\n  \"clientId\": \"WLUte\",\n  \"eventTopic\": \"U_CRn_\",\n  \"active\": false,\n  \"partitionKey\": \"\",\n  \"eventBatchLimit\": 8192,\n  \"eventBatchLingerMilliseconds\": 5\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/kafka",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kafka"
							]
						},
						"description": "Updates the Kafka settings used by the device."
					},
					"response": [
						{
							"name": "No Content. The Kafka settings were updated successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bootstraps\": [\n    {\n      \"hostname\": \"}\",\n      \"port\": 9092\n    }\n  ],\n  \"clientId\": \"WLUte\",\n  \"eventTopic\": \"U_CRn_\",\n  \"active\": false,\n  \"partitionKey\": \"\",\n  \"eventBatchLimit\": 8192,\n  \"eventBatchLingerMilliseconds\": 5\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kafka",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kafka"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request. The request body contained a Kafka configuration object the server could not understand.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bootstraps\": [\n    {\n      \"hostname\": \"}\",\n      \"port\": 9092\n    }\n  ],\n  \"clientId\": \"WLUte\",\n  \"eventTopic\": \"U_CRn_\",\n  \"active\": false,\n  \"partitionKey\": \"\",\n  \"eventBatchLimit\": 8192,\n  \"eventBatchLingerMilliseconds\": 5\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kafka",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kafka"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "profiles",
			"item": [
				{
					"name": "stop",
					"item": [
						{
							"name": "Stop preset",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/profiles/stop",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles",
										"stop"
									]
								},
								"description": "Stops the currently running profile preset.\nIf no preset is currently running, this is a no-op.\n"
							},
							"response": [
								{
									"name": "No Content.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/profiles/stop",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profiles",
												"stop"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "inventory",
					"item": [
						{
							"name": "presets-schema",
							"item": [
								{
									"name": "Retrieve inventory schema",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/profiles/inventory/presets-schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profiles",
												"inventory",
												"presets-schema"
											]
										},
										"description": "Deprecated: This path will be removed in a future release. The device-specific schema and\ncapabilities can be observed via the \"/openapi.json\" API path instead.\n\nRetrieves the reader-specific JSON schema used to validate inventory presets.\nThis is a good way to determine reader capabilities such as max transmit power or available RF modes.\n"
									},
									"response": [
										{
											"name": "OK.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profiles/inventory/presets-schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profiles",
														"inventory",
														"presets-schema"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "presets",
							"item": [
								{
									"name": "{presetId}",
									"item": [
										{
											"name": "start",
											"item": [
												{
													"name": "Start inventory preset",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId/start",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"profiles",
																"inventory",
																"presets",
																":presetId",
																"start"
															],
															"variable": [
																{
																	"key": "presetId",
																	"value": "l6fi"
																}
															]
														},
														"description": "Starts running the specified inventory preset. The running preset cannot be\nreplaced or deleted. The preset will be automatically restarted if the reader\nreboots. If the reader is restarted multiple times in quick succcession the\nsaved preset may be stopped to prevent the bad preset from blocking access to\nthe rest interface. If this occurs an ERROR level message will be logged.\n"
													},
													"response": [
														{
															"name": "No Content. The profile was started.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId/start",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"profiles",
																		"inventory",
																		"presets",
																		":presetId",
																		"start"
																	],
																	"variable": [
																		{
																			"key": "presetId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad request. The saved preset contains an invalid profile configuration.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId/start",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"profiles",
																		"inventory",
																		"presets",
																		":presetId",
																		"start"
																	],
																	"variable": [
																		{
																			"key": "presetId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														},
														{
															"name": "Not Found. The specified preset was not found on the system.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId/start",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"profiles",
																		"inventory",
																		"presets",
																		":presetId",
																		"start"
																	],
																	"variable": [
																		{
																			"key": "presetId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														},
														{
															"name": "Conflict. Another operation is running on the reader.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId/start",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"profiles",
																		"inventory",
																		"presets",
																		":presetId",
																		"start"
																	],
																	"variable": [
																		{
																			"key": "presetId"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve inventory preset detail",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profiles",
														"inventory",
														"presets",
														":presetId"
													],
													"variable": [
														{
															"key": "presetId",
															"value": "l6fi"
														}
													]
												},
												"description": "Retrieves the detailed configuration of the specified preset."
											},
											"response": [
												{
													"name": "OK.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"profiles",
																"inventory",
																"presets",
																":presetId"
															],
															"variable": [
																{
																	"key": "presetId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"antennaConfigs\": [\n    {\n      \"antennaPort\": \"<integer>\",\n      \"transmitPowerCdbm\": \"<integer>\",\n      \"rfMode\": 2,\n      \"inventorySession\": \"<integer>\",\n      \"inventorySearchMode\": \"single-target-with-tagfocus\",\n      \"estimatedTagPopulation\": \"<integer>\",\n      \"antennaName\": \"uTCJVM-kIcZ\",\n      \"filtering\": {\n        \"filters\": [\n          {\n            \"action\": \"include\",\n            \"tagMemoryBank\": \"epc\",\n            \"bitOffset\": \"<integer>\",\n            \"mask\": \"adeECB596\",\n            \"maskLength\": \"<integer>\"\n          }\n        ],\n        \"filterLink\": \"union\",\n        \"filterVerification\": \"passive\"\n      },\n      \"powerSweeping\": {\n        \"minimumPowerCdbm\": \"<integer>\",\n        \"stepSizeCdb\": \"<integer>\"\n      },\n      \"fastId\": \"disabled\",\n      \"protectedModePinHex\": \"a2Bc6f15\",\n      \"receiveSensitivityDbm\": \"<integer>\",\n      \"tagAuthentication\": {\n        \"messageHex\": \"04C21F5F1EAB\"\n      },\n      \"tagMemoryReads\": [\n        {\n          \"memoryBank\": \"user\",\n          \"wordOffset\": \"<integer>\",\n          \"wordCount\": \"<integer>\"\n        }\n      ],\n      \"tagAccessPasswordHex\": \"694717A6\",\n      \"tagAccessPasswordWriteHex\": \"        \",\n      \"tagSecurityModesWrite\": {\n        \"protected\": false,\n        \"shortRange\": false\n      }\n    }\n  ],\n  \"eventConfig\": {},\n  \"startTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ],\n  \"stopTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ]\n}"
												},
												{
													"name": "Not Found. The specified preset was not found on the system.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"profiles",
																"inventory",
																"presets",
																":presetId"
															],
															"variable": [
																{
																	"key": "presetId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Create or replace inventory preset",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"antennaConfigs\": [\n    {\n      \"antennaPort\": \"<integer>\",\n      \"transmitPowerCdbm\": \"<integer>\",\n      \"rfMode\": 2,\n      \"inventorySession\": \"<integer>\",\n      \"inventorySearchMode\": \"single-target-with-tagfocus\",\n      \"estimatedTagPopulation\": \"<integer>\",\n      \"antennaName\": \"uTCJVM-kIcZ\",\n      \"filtering\": {\n        \"filters\": [\n          {\n            \"action\": \"include\",\n            \"tagMemoryBank\": \"epc\",\n            \"bitOffset\": \"<integer>\",\n            \"mask\": \"adeECB596\",\n            \"maskLength\": \"<integer>\"\n          }\n        ],\n        \"filterLink\": \"union\",\n        \"filterVerification\": \"passive\"\n      },\n      \"powerSweeping\": {\n        \"minimumPowerCdbm\": \"<integer>\",\n        \"stepSizeCdb\": \"<integer>\"\n      },\n      \"fastId\": \"disabled\",\n      \"protectedModePinHex\": \"a2Bc6f15\",\n      \"receiveSensitivityDbm\": \"<integer>\",\n      \"tagAuthentication\": {\n        \"messageHex\": \"04C21F5F1EAB\"\n      },\n      \"tagMemoryReads\": [\n        {\n          \"memoryBank\": \"user\",\n          \"wordOffset\": \"<integer>\",\n          \"wordCount\": \"<integer>\"\n        }\n      ],\n      \"tagAccessPasswordHex\": \"694717A6\",\n      \"tagAccessPasswordWriteHex\": \"        \",\n      \"tagSecurityModesWrite\": {\n        \"protected\": false,\n        \"shortRange\": false\n      }\n    }\n  ],\n  \"eventConfig\": {},\n  \"startTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ],\n  \"stopTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profiles",
														"inventory",
														"presets",
														":presetId"
													],
													"variable": [
														{
															"key": "presetId",
															"value": "1CqxdK02N7"
														}
													]
												},
												"description": "Creates or replaces a user-defined inventory preset.  Presets with names\nthat begin with 'default' or 'impinj' may not be created or replaced.\n"
											},
											"response": [
												{
													"name": "Created. The preset was successfully created.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"antennaConfigs\": [\n    {\n      \"antennaPort\": \"<integer>\",\n      \"transmitPowerCdbm\": \"<integer>\",\n      \"rfMode\": 2,\n      \"inventorySession\": \"<integer>\",\n      \"inventorySearchMode\": \"single-target-with-tagfocus\",\n      \"estimatedTagPopulation\": \"<integer>\",\n      \"antennaName\": \"uTCJVM-kIcZ\",\n      \"filtering\": {\n        \"filters\": [\n          {\n            \"action\": \"include\",\n            \"tagMemoryBank\": \"epc\",\n            \"bitOffset\": \"<integer>\",\n            \"mask\": \"adeECB596\",\n            \"maskLength\": \"<integer>\"\n          }\n        ],\n        \"filterLink\": \"union\",\n        \"filterVerification\": \"passive\"\n      },\n      \"powerSweeping\": {\n        \"minimumPowerCdbm\": \"<integer>\",\n        \"stepSizeCdb\": \"<integer>\"\n      },\n      \"fastId\": \"disabled\",\n      \"protectedModePinHex\": \"a2Bc6f15\",\n      \"receiveSensitivityDbm\": \"<integer>\",\n      \"tagAuthentication\": {\n        \"messageHex\": \"04C21F5F1EAB\"\n      },\n      \"tagMemoryReads\": [\n        {\n          \"memoryBank\": \"user\",\n          \"wordOffset\": \"<integer>\",\n          \"wordCount\": \"<integer>\"\n        }\n      ],\n      \"tagAccessPasswordHex\": \"694717A6\",\n      \"tagAccessPasswordWriteHex\": \"        \",\n      \"tagSecurityModesWrite\": {\n        \"protected\": false,\n        \"shortRange\": false\n      }\n    }\n  ],\n  \"eventConfig\": {},\n  \"startTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ],\n  \"stopTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"profiles",
																"inventory",
																"presets",
																":presetId"
															],
															"variable": [
																{
																	"key": "presetId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "No Content. The preset was successfully replaced.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"antennaConfigs\": [\n    {\n      \"antennaPort\": \"<integer>\",\n      \"transmitPowerCdbm\": \"<integer>\",\n      \"rfMode\": 2,\n      \"inventorySession\": \"<integer>\",\n      \"inventorySearchMode\": \"single-target-with-tagfocus\",\n      \"estimatedTagPopulation\": \"<integer>\",\n      \"antennaName\": \"uTCJVM-kIcZ\",\n      \"filtering\": {\n        \"filters\": [\n          {\n            \"action\": \"include\",\n            \"tagMemoryBank\": \"epc\",\n            \"bitOffset\": \"<integer>\",\n            \"mask\": \"adeECB596\",\n            \"maskLength\": \"<integer>\"\n          }\n        ],\n        \"filterLink\": \"union\",\n        \"filterVerification\": \"passive\"\n      },\n      \"powerSweeping\": {\n        \"minimumPowerCdbm\": \"<integer>\",\n        \"stepSizeCdb\": \"<integer>\"\n      },\n      \"fastId\": \"disabled\",\n      \"protectedModePinHex\": \"a2Bc6f15\",\n      \"receiveSensitivityDbm\": \"<integer>\",\n      \"tagAuthentication\": {\n        \"messageHex\": \"04C21F5F1EAB\"\n      },\n      \"tagMemoryReads\": [\n        {\n          \"memoryBank\": \"user\",\n          \"wordOffset\": \"<integer>\",\n          \"wordCount\": \"<integer>\"\n        }\n      ],\n      \"tagAccessPasswordHex\": \"694717A6\",\n      \"tagAccessPasswordWriteHex\": \"        \",\n      \"tagSecurityModesWrite\": {\n        \"protected\": false,\n        \"shortRange\": false\n      }\n    }\n  ],\n  \"eventConfig\": {},\n  \"startTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ],\n  \"stopTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"profiles",
																"inventory",
																"presets",
																":presetId"
															],
															"variable": [
																{
																	"key": "presetId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request. The request body contained an invalid profile configuration.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"antennaConfigs\": [\n    {\n      \"antennaPort\": \"<integer>\",\n      \"transmitPowerCdbm\": \"<integer>\",\n      \"rfMode\": 2,\n      \"inventorySession\": \"<integer>\",\n      \"inventorySearchMode\": \"single-target-with-tagfocus\",\n      \"estimatedTagPopulation\": \"<integer>\",\n      \"antennaName\": \"uTCJVM-kIcZ\",\n      \"filtering\": {\n        \"filters\": [\n          {\n            \"action\": \"include\",\n            \"tagMemoryBank\": \"epc\",\n            \"bitOffset\": \"<integer>\",\n            \"mask\": \"adeECB596\",\n            \"maskLength\": \"<integer>\"\n          }\n        ],\n        \"filterLink\": \"union\",\n        \"filterVerification\": \"passive\"\n      },\n      \"powerSweeping\": {\n        \"minimumPowerCdbm\": \"<integer>\",\n        \"stepSizeCdb\": \"<integer>\"\n      },\n      \"fastId\": \"disabled\",\n      \"protectedModePinHex\": \"a2Bc6f15\",\n      \"receiveSensitivityDbm\": \"<integer>\",\n      \"tagAuthentication\": {\n        \"messageHex\": \"04C21F5F1EAB\"\n      },\n      \"tagMemoryReads\": [\n        {\n          \"memoryBank\": \"user\",\n          \"wordOffset\": \"<integer>\",\n          \"wordCount\": \"<integer>\"\n        }\n      ],\n      \"tagAccessPasswordHex\": \"694717A6\",\n      \"tagAccessPasswordWriteHex\": \"        \",\n      \"tagSecurityModesWrite\": {\n        \"protected\": false,\n        \"shortRange\": false\n      }\n    }\n  ],\n  \"eventConfig\": {},\n  \"startTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ],\n  \"stopTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"profiles",
																"inventory",
																"presets",
																":presetId"
															],
															"variable": [
																{
																	"key": "presetId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden. Preset ID is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"antennaConfigs\": [\n    {\n      \"antennaPort\": \"<integer>\",\n      \"transmitPowerCdbm\": \"<integer>\",\n      \"rfMode\": 2,\n      \"inventorySession\": \"<integer>\",\n      \"inventorySearchMode\": \"single-target-with-tagfocus\",\n      \"estimatedTagPopulation\": \"<integer>\",\n      \"antennaName\": \"uTCJVM-kIcZ\",\n      \"filtering\": {\n        \"filters\": [\n          {\n            \"action\": \"include\",\n            \"tagMemoryBank\": \"epc\",\n            \"bitOffset\": \"<integer>\",\n            \"mask\": \"adeECB596\",\n            \"maskLength\": \"<integer>\"\n          }\n        ],\n        \"filterLink\": \"union\",\n        \"filterVerification\": \"passive\"\n      },\n      \"powerSweeping\": {\n        \"minimumPowerCdbm\": \"<integer>\",\n        \"stepSizeCdb\": \"<integer>\"\n      },\n      \"fastId\": \"disabled\",\n      \"protectedModePinHex\": \"a2Bc6f15\",\n      \"receiveSensitivityDbm\": \"<integer>\",\n      \"tagAuthentication\": {\n        \"messageHex\": \"04C21F5F1EAB\"\n      },\n      \"tagMemoryReads\": [\n        {\n          \"memoryBank\": \"user\",\n          \"wordOffset\": \"<integer>\",\n          \"wordCount\": \"<integer>\"\n        }\n      ],\n      \"tagAccessPasswordHex\": \"694717A6\",\n      \"tagAccessPasswordWriteHex\": \"        \",\n      \"tagSecurityModesWrite\": {\n        \"protected\": false,\n        \"shortRange\": false\n      }\n    }\n  ],\n  \"eventConfig\": {},\n  \"startTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ],\n  \"stopTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"profiles",
																"inventory",
																"presets",
																":presetId"
															],
															"variable": [
																{
																	"key": "presetId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Conflict. The preset is running and cannot be modified.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"antennaConfigs\": [\n    {\n      \"antennaPort\": \"<integer>\",\n      \"transmitPowerCdbm\": \"<integer>\",\n      \"rfMode\": 2,\n      \"inventorySession\": \"<integer>\",\n      \"inventorySearchMode\": \"single-target-with-tagfocus\",\n      \"estimatedTagPopulation\": \"<integer>\",\n      \"antennaName\": \"uTCJVM-kIcZ\",\n      \"filtering\": {\n        \"filters\": [\n          {\n            \"action\": \"include\",\n            \"tagMemoryBank\": \"epc\",\n            \"bitOffset\": \"<integer>\",\n            \"mask\": \"adeECB596\",\n            \"maskLength\": \"<integer>\"\n          }\n        ],\n        \"filterLink\": \"union\",\n        \"filterVerification\": \"passive\"\n      },\n      \"powerSweeping\": {\n        \"minimumPowerCdbm\": \"<integer>\",\n        \"stepSizeCdb\": \"<integer>\"\n      },\n      \"fastId\": \"disabled\",\n      \"protectedModePinHex\": \"a2Bc6f15\",\n      \"receiveSensitivityDbm\": \"<integer>\",\n      \"tagAuthentication\": {\n        \"messageHex\": \"04C21F5F1EAB\"\n      },\n      \"tagMemoryReads\": [\n        {\n          \"memoryBank\": \"user\",\n          \"wordOffset\": \"<integer>\",\n          \"wordCount\": \"<integer>\"\n        }\n      ],\n      \"tagAccessPasswordHex\": \"694717A6\",\n      \"tagAccessPasswordWriteHex\": \"        \",\n      \"tagSecurityModesWrite\": {\n        \"protected\": false,\n        \"shortRange\": false\n      }\n    }\n  ],\n  \"eventConfig\": {},\n  \"startTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ],\n  \"stopTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"profiles",
																"inventory",
																"presets",
																":presetId"
															],
															"variable": [
																{
																	"key": "presetId"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Delete inventory preset",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profiles",
														"inventory",
														"presets",
														":presetId"
													],
													"variable": [
														{
															"key": "presetId",
															"value": "l6fi"
														}
													]
												},
												"description": "Removes a user-defined settings preset for executing inventory."
											},
											"response": [
												{
													"name": "No Content. The preset was deleted from the reader.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"profiles",
																"inventory",
																"presets",
																":presetId"
															],
															"variable": [
																{
																	"key": "presetId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden. This preset is provided by the reader and cannot be deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"profiles",
																"inventory",
																"presets",
																":presetId"
															],
															"variable": [
																{
																	"key": "presetId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Not Found. The specified preset was not found on the system.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"profiles",
																"inventory",
																"presets",
																":presetId"
															],
															"variable": [
																{
																	"key": "presetId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Conflict. The preset is running and cannot be modified.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/profiles/inventory/presets/:presetId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"profiles",
																"inventory",
																"presets",
																":presetId"
															],
															"variable": [
																{
																	"key": "presetId"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve inventory presets",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/profiles/inventory/presets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profiles",
												"inventory",
												"presets"
											]
										},
										"description": "Retrieves the available presets for running inventory."
									},
									"response": [
										{
											"name": "OK. The list of presets for this profile.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profiles/inventory/presets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profiles",
														"inventory",
														"presets"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  \"YWIn\",\n  \"D3IZbB9zADF\"\n]"
										}
									]
								}
							]
						},
						{
							"name": "start",
							"item": [
								{
									"name": "Start transient inventory preset",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"antennaConfigs\": [\n    {\n      \"antennaPort\": \"<integer>\",\n      \"transmitPowerCdbm\": \"<integer>\",\n      \"rfMode\": 2,\n      \"inventorySession\": \"<integer>\",\n      \"inventorySearchMode\": \"single-target-with-tagfocus\",\n      \"estimatedTagPopulation\": \"<integer>\",\n      \"antennaName\": \"uTCJVM-kIcZ\",\n      \"filtering\": {\n        \"filters\": [\n          {\n            \"action\": \"include\",\n            \"tagMemoryBank\": \"epc\",\n            \"bitOffset\": \"<integer>\",\n            \"mask\": \"adeECB596\",\n            \"maskLength\": \"<integer>\"\n          }\n        ],\n        \"filterLink\": \"union\",\n        \"filterVerification\": \"passive\"\n      },\n      \"powerSweeping\": {\n        \"minimumPowerCdbm\": \"<integer>\",\n        \"stepSizeCdb\": \"<integer>\"\n      },\n      \"fastId\": \"disabled\",\n      \"protectedModePinHex\": \"a2Bc6f15\",\n      \"receiveSensitivityDbm\": \"<integer>\",\n      \"tagAuthentication\": {\n        \"messageHex\": \"04C21F5F1EAB\"\n      },\n      \"tagMemoryReads\": [\n        {\n          \"memoryBank\": \"user\",\n          \"wordOffset\": \"<integer>\",\n          \"wordCount\": \"<integer>\"\n        }\n      ],\n      \"tagAccessPasswordHex\": \"694717A6\",\n      \"tagAccessPasswordWriteHex\": \"        \",\n      \"tagSecurityModesWrite\": {\n        \"protected\": false,\n        \"shortRange\": false\n      }\n    }\n  ],\n  \"eventConfig\": {},\n  \"startTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ],\n  \"stopTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/profiles/inventory/start",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profiles",
												"inventory",
												"start"
											]
										},
										"description": "Start running inventory using the provided inventory configuration. The\nconfiguration is not saved and not restarted if the reader reboots.\n\nTransient presets are recommended for running configuration that is\nupdated frequently or for which there is no benefit to storing the\nconfiguration on the reader after the preset has stopped. Transient\npresets are usually the best choice when performing operations that\nmodify tag memory or are meant to operate on a specific tag.\n"
									},
									"response": [
										{
											"name": "No Content. The profile was started.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"antennaConfigs\": [\n    {\n      \"antennaPort\": \"<integer>\",\n      \"transmitPowerCdbm\": \"<integer>\",\n      \"rfMode\": 2,\n      \"inventorySession\": \"<integer>\",\n      \"inventorySearchMode\": \"single-target-with-tagfocus\",\n      \"estimatedTagPopulation\": \"<integer>\",\n      \"antennaName\": \"uTCJVM-kIcZ\",\n      \"filtering\": {\n        \"filters\": [\n          {\n            \"action\": \"include\",\n            \"tagMemoryBank\": \"epc\",\n            \"bitOffset\": \"<integer>\",\n            \"mask\": \"adeECB596\",\n            \"maskLength\": \"<integer>\"\n          }\n        ],\n        \"filterLink\": \"union\",\n        \"filterVerification\": \"passive\"\n      },\n      \"powerSweeping\": {\n        \"minimumPowerCdbm\": \"<integer>\",\n        \"stepSizeCdb\": \"<integer>\"\n      },\n      \"fastId\": \"disabled\",\n      \"protectedModePinHex\": \"a2Bc6f15\",\n      \"receiveSensitivityDbm\": \"<integer>\",\n      \"tagAuthentication\": {\n        \"messageHex\": \"04C21F5F1EAB\"\n      },\n      \"tagMemoryReads\": [\n        {\n          \"memoryBank\": \"user\",\n          \"wordOffset\": \"<integer>\",\n          \"wordCount\": \"<integer>\"\n        }\n      ],\n      \"tagAccessPasswordHex\": \"694717A6\",\n      \"tagAccessPasswordWriteHex\": \"        \",\n      \"tagSecurityModesWrite\": {\n        \"protected\": false,\n        \"shortRange\": false\n      }\n    }\n  ],\n  \"eventConfig\": {},\n  \"startTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ],\n  \"stopTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/profiles/inventory/start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profiles",
														"inventory",
														"start"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request. The request body contained an invalid profile configuration.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"antennaConfigs\": [\n    {\n      \"antennaPort\": \"<integer>\",\n      \"transmitPowerCdbm\": \"<integer>\",\n      \"rfMode\": 2,\n      \"inventorySession\": \"<integer>\",\n      \"inventorySearchMode\": \"single-target-with-tagfocus\",\n      \"estimatedTagPopulation\": \"<integer>\",\n      \"antennaName\": \"uTCJVM-kIcZ\",\n      \"filtering\": {\n        \"filters\": [\n          {\n            \"action\": \"include\",\n            \"tagMemoryBank\": \"epc\",\n            \"bitOffset\": \"<integer>\",\n            \"mask\": \"adeECB596\",\n            \"maskLength\": \"<integer>\"\n          }\n        ],\n        \"filterLink\": \"union\",\n        \"filterVerification\": \"passive\"\n      },\n      \"powerSweeping\": {\n        \"minimumPowerCdbm\": \"<integer>\",\n        \"stepSizeCdb\": \"<integer>\"\n      },\n      \"fastId\": \"disabled\",\n      \"protectedModePinHex\": \"a2Bc6f15\",\n      \"receiveSensitivityDbm\": \"<integer>\",\n      \"tagAuthentication\": {\n        \"messageHex\": \"04C21F5F1EAB\"\n      },\n      \"tagMemoryReads\": [\n        {\n          \"memoryBank\": \"user\",\n          \"wordOffset\": \"<integer>\",\n          \"wordCount\": \"<integer>\"\n        }\n      ],\n      \"tagAccessPasswordHex\": \"694717A6\",\n      \"tagAccessPasswordWriteHex\": \"        \",\n      \"tagSecurityModesWrite\": {\n        \"protected\": false,\n        \"shortRange\": false\n      }\n    }\n  ],\n  \"eventConfig\": {},\n  \"startTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ],\n  \"stopTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/profiles/inventory/start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profiles",
														"inventory",
														"start"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
										},
										{
											"name": "Conflict. Another operation is running on the reader.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"antennaConfigs\": [\n    {\n      \"antennaPort\": \"<integer>\",\n      \"transmitPowerCdbm\": \"<integer>\",\n      \"rfMode\": 2,\n      \"inventorySession\": \"<integer>\",\n      \"inventorySearchMode\": \"single-target-with-tagfocus\",\n      \"estimatedTagPopulation\": \"<integer>\",\n      \"antennaName\": \"uTCJVM-kIcZ\",\n      \"filtering\": {\n        \"filters\": [\n          {\n            \"action\": \"include\",\n            \"tagMemoryBank\": \"epc\",\n            \"bitOffset\": \"<integer>\",\n            \"mask\": \"adeECB596\",\n            \"maskLength\": \"<integer>\"\n          }\n        ],\n        \"filterLink\": \"union\",\n        \"filterVerification\": \"passive\"\n      },\n      \"powerSweeping\": {\n        \"minimumPowerCdbm\": \"<integer>\",\n        \"stepSizeCdb\": \"<integer>\"\n      },\n      \"fastId\": \"disabled\",\n      \"protectedModePinHex\": \"a2Bc6f15\",\n      \"receiveSensitivityDbm\": \"<integer>\",\n      \"tagAuthentication\": {\n        \"messageHex\": \"04C21F5F1EAB\"\n      },\n      \"tagMemoryReads\": [\n        {\n          \"memoryBank\": \"user\",\n          \"wordOffset\": \"<integer>\",\n          \"wordCount\": \"<integer>\"\n        }\n      ],\n      \"tagAccessPasswordHex\": \"694717A6\",\n      \"tagAccessPasswordWriteHex\": \"        \",\n      \"tagSecurityModesWrite\": {\n        \"protected\": false,\n        \"shortRange\": false\n      }\n    }\n  ],\n  \"eventConfig\": {},\n  \"startTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ],\n  \"stopTriggers\": [\n    {\n      \"gpiTransitionEvent\": {\n        \"gpi\": \"<integer>\",\n        \"transition\": \"low-to-high\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/profiles/inventory/start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profiles",
														"inventory",
														"start"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "tag",
							"item": [
								{
									"name": "Checks for the presence of a tag in the field of view of an antenna.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/profiles/inventory/tag?epc=<string>&epcHex=5B9CFA&tid=<string>&tidHex=5B9CFA&antennaPort=<integer>&antennaName=h",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profiles",
												"inventory",
												"tag"
											],
											"query": [
												{
													"key": "epc",
													"value": "<string>",
													"description": "The base64url-encoded EPC of the tag of interest."
												},
												{
													"key": "epcHex",
													"value": "5B9CFA",
													"description": "The hex-encoded EPC of the tag of interest."
												},
												{
													"key": "tid",
													"value": "<string>",
													"description": "The base64url-encoded TID of the tag of interest."
												},
												{
													"key": "tidHex",
													"value": "5B9CFA",
													"description": "The hex-encoded TID of the tag of interest."
												},
												{
													"key": "antennaPort",
													"value": "<integer>",
													"description": "The port number of the antenna for the tag of interest."
												},
												{
													"key": "antennaName",
													"value": "h",
													"description": "Name for the antenna for the tag of interest."
												}
											]
										},
										"description": "Returns information on whether the specified tag was seen on the specified antenna in the\ntag reporting interval. Available only if TagReportingConfiguration feature is enabled.\nMust specify exactly one tag identifier and one antenna identifier.\n"
									},
									"response": [
										{
											"name": "Tag presence information.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profiles/inventory/tag?epc=<string>&epcHex=5B9CFA&tid=<string>&tidHex=5B9CFA&antennaPort=<integer>&antennaName=h",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profiles",
														"inventory",
														"tag"
													],
													"query": [
														{
															"key": "epc",
															"value": "<string>",
															"description": "The base64url-encoded EPC of the tag of interest."
														},
														{
															"key": "epcHex",
															"value": "5B9CFA",
															"description": "The hex-encoded EPC of the tag of interest."
														},
														{
															"key": "tid",
															"value": "<string>",
															"description": "The base64url-encoded TID of the tag of interest."
														},
														{
															"key": "tidHex",
															"value": "5B9CFA",
															"description": "The hex-encoded TID of the tag of interest."
														},
														{
															"key": "antennaPort",
															"value": "<integer>",
															"description": "The port number of the antenna for the tag of interest."
														},
														{
															"key": "antennaName",
															"value": "h",
															"description": "Name for the antenna for the tag of interest."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"isPresent\": \"<boolean>\"\n}"
										},
										{
											"name": "Bad Request. Malformed request, does not contain exactly one tag identifier and one\nantenna identifier.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profiles/inventory/tag?epc=<string>&epcHex=5B9CFA&tid=<string>&tidHex=5B9CFA&antennaPort=<integer>&antennaName=h",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profiles",
														"inventory",
														"tag"
													],
													"query": [
														{
															"key": "epc",
															"value": "<string>",
															"description": "The base64url-encoded EPC of the tag of interest."
														},
														{
															"key": "epcHex",
															"value": "5B9CFA",
															"description": "The hex-encoded EPC of the tag of interest."
														},
														{
															"key": "tid",
															"value": "<string>",
															"description": "The base64url-encoded TID of the tag of interest."
														},
														{
															"key": "tidHex",
															"value": "5B9CFA",
															"description": "The hex-encoded TID of the tag of interest."
														},
														{
															"key": "antennaPort",
															"value": "<integer>",
															"description": "The port number of the antenna for the tag of interest."
														},
														{
															"key": "antennaName",
															"value": "h",
															"description": "Name for the antenna for the tag of interest."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
										},
										{
											"name": "Not found. Tag presence information not available. Either the tag reporting feature is not\nenabled or the tag and antenna identifiers used do not match the reporting configuration.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profiles/inventory/tag?epc=<string>&epcHex=5B9CFA&tid=<string>&tidHex=5B9CFA&antennaPort=<integer>&antennaName=h",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profiles",
														"inventory",
														"tag"
													],
													"query": [
														{
															"key": "epc",
															"value": "<string>",
															"description": "The base64url-encoded EPC of the tag of interest."
														},
														{
															"key": "epcHex",
															"value": "5B9CFA",
															"description": "The hex-encoded EPC of the tag of interest."
														},
														{
															"key": "tid",
															"value": "<string>",
															"description": "The base64url-encoded TID of the tag of interest."
														},
														{
															"key": "tidHex",
															"value": "5B9CFA",
															"description": "The hex-encoded TID of the tag of interest."
														},
														{
															"key": "antennaPort",
															"value": "<integer>",
															"description": "The port number of the antenna for the tag of interest."
														},
														{
															"key": "antennaName",
															"value": "h",
															"description": "Name for the antenna for the tag of interest."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Retrieve profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/profiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profiles"
							]
						},
						"description": "Retrieves the profiles (e.g. inventory, location, and direction) supported by this reader."
					},
					"response": [
						{
							"name": "OK.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"<string>\"\n]"
						},
						{
							"name": "An internal error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "webhooks",
			"item": [
				{
					"name": "event",
					"item": [
						{
							"name": "Get the event webhook configuration.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/event",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"event"
									]
								},
								"description": "Gets the event webhook configuration."
							},
							"response": [
								{
									"name": "OK.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/event",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"event"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"active\": false,\n  \"serverConfiguration\": {\n    \"url\": \"http://m\",\n    \"port\": \"<integer>\",\n    \"authentication\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"tls\": {}\n  },\n  \"retry\": {},\n  \"eventBatchLimit\": 10000,\n  \"eventBatchLingerMilliseconds\": 1000,\n  \"eventBufferSize\": 100000\n}"
								}
							]
						},
						{
							"name": "Set the event webhook configuration.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"active\": false,\n  \"serverConfiguration\": {\n    \"url\": \"http://m\",\n    \"port\": \"<integer>\",\n    \"authentication\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"tls\": {}\n  },\n  \"retry\": {},\n  \"eventBatchLimit\": 10000,\n  \"eventBatchLingerMilliseconds\": 1000,\n  \"eventBufferSize\": 100000\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/event",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"event"
									]
								},
								"description": "Sets the event webhook configuration."
							},
							"response": [
								{
									"name": "No Content. Configuration saved successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": false,\n  \"serverConfiguration\": {\n    \"url\": \"http://m\",\n    \"port\": \"<integer>\",\n    \"authentication\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"tls\": {}\n  },\n  \"retry\": {},\n  \"eventBatchLimit\": 10000,\n  \"eventBatchLingerMilliseconds\": 1000,\n  \"eventBufferSize\": 100000\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks/event",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"event"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request. Configuration is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": false,\n  \"serverConfiguration\": {\n    \"url\": \"http://m\",\n    \"port\": \"<integer>\",\n    \"authentication\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"tls\": {}\n  },\n  \"retry\": {},\n  \"eventBatchLimit\": 10000,\n  \"eventBatchLingerMilliseconds\": 1000,\n  \"eventBufferSize\": 100000\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks/event",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"event"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "device",
			"item": [
				{
					"name": "gpos",
					"item": [
						{
							"name": "Retrieve GPO configurations.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/device/gpos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"device",
										"gpos"
									]
								},
								"description": "Retrieves the GPO configurations of the reader.\n"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/device/gpos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"device",
												"gpos"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"gpoConfigurations\": [\n    {\n      \"gpo\": \"<integer>\",\n      \"state\": \"high\"\n    },\n    {\n      \"gpo\": \"<integer>\",\n      \"state\": \"low\"\n    },\n    {\n      \"gpo\": \"<integer>\",\n      \"state\": \"high\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update GPO configurations.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"gpoConfigurations\": [\n    {\n      \"gpo\": \"<integer>\",\n      \"state\": \"high\"\n    },\n    {\n      \"gpo\": \"<integer>\",\n      \"state\": \"low\"\n    },\n    {\n      \"gpo\": \"<integer>\",\n      \"state\": \"high\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/device/gpos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"device",
										"gpos"
									]
								},
								"description": "Updates the GPO configurations of the reader.\nIf no configuration is provided for a GPO then the existing configuration will be used.\n"
							},
							"response": [
								{
									"name": "No Content.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"gpoConfigurations\": [\n    {\n      \"gpo\": \"<integer>\",\n      \"state\": \"high\"\n    },\n    {\n      \"gpo\": \"<integer>\",\n      \"state\": \"low\"\n    },\n    {\n      \"gpo\": \"<integer>\",\n      \"state\": \"high\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/device/gpos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"device",
												"gpos"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request. Invalid GPO configurations.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"gpoConfigurations\": [\n    {\n      \"gpo\": \"<integer>\",\n      \"state\": \"high\"\n    },\n    {\n      \"gpo\": \"<integer>\",\n      \"state\": \"low\"\n    },\n    {\n      \"gpo\": \"<integer>\",\n      \"state\": \"high\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/device/gpos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"device",
												"gpos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "system",
			"item": [
				{
					"name": "access",
					"item": [
						{
							"name": "authentication",
							"item": [
								{
									"name": "Retrieve the reader's authentication configuration.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/access/authentication",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"access",
												"authentication"
											]
										},
										"description": "Retrieves the reader's authentication configuration."
									},
									"response": [
										{
											"name": "OK.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/access/authentication",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"access",
														"authentication"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"authType\": \"basic\"\n}"
										}
									]
								},
								{
									"name": "Update the reader's authentication configuration.",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authType\": \"basic\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/access/authentication",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"access",
												"authentication"
											]
										},
										"description": "Updates the reader's authentication configuration."
									},
									"response": [
										{
											"name": "No Content. The authentication configuration has been updated successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authType\": \"basic\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/system/access/authentication",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"access",
														"authentication"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request. The request body contained an invalid configuration.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authType\": \"basic\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/system/access/authentication",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"access",
														"authentication"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "users",
							"item": [
								{
									"name": "{userId}",
									"item": [
										{
											"name": "password",
											"item": [
												{
													"name": "Update the password for the specified user.",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"currentPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/system/access/users/:userId/password",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"access",
																"users",
																":userId",
																"password"
															],
															"variable": [
																{
																	"key": "userId",
																	"value": "<integer>"
																}
															]
														},
														"description": "Updates the password for the specified user."
													},
													"response": [
														{
															"name": "No Content. The password was updated successfully.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"currentPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/system/access/users/:userId/password",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"access",
																		"users",
																		":userId",
																		"password"
																	],
																	"variable": [
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request. An invalid request was received.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"currentPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/system/access/users/:userId/password",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"access",
																		"users",
																		":userId",
																		"password"
																	],
																	"variable": [
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														},
														{
															"name": "Not found. Could not find a user with the specified userId.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"currentPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/system/access/users/:userId/password",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"access",
																		"users",
																		":userId",
																		"password"
																	],
																	"variable": [
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "Retrieve the list of users.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/access/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"access",
												"users"
											]
										},
										"description": "Retrieves the list of users that can access reader.\n"
									},
									"response": [
										{
											"name": "OK.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/access/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"access",
														"users"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"userId\": \"<integer>\",\n    \"username\": \"<string>\"\n  },\n  {\n    \"userId\": \"<integer>\",\n    \"username\": \"<string>\"\n  }\n]"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "antenna-hub",
					"item": [
						{
							"name": "enable",
							"item": [
								{
									"name": "Enable the antenna-hub feature.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/antenna-hub/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"antenna-hub",
												"enable"
											]
										},
										"description": "Enable the antenna-hub feature.\nSystem reboot is required for the new configuration to take effect.\n"
									},
									"response": [
										{
											"name": "Accepted. System reboot is required for the new configuration to take effect.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/antenna-hub/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"antenna-hub",
														"enable"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "No Content. The antenna-hub is already in this configuration.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/antenna-hub/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"antenna-hub",
														"enable"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found. This feature is unavailable on this reader model.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/antenna-hub/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"antenna-hub",
														"enable"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "disable",
							"item": [
								{
									"name": "Disable the antenna-hub feature.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/antenna-hub/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"antenna-hub",
												"disable"
											]
										},
										"description": "Disable the antenna-hub feature.\nSystem reboot is required for the new configuration to take effect.\n"
									},
									"response": [
										{
											"name": "Accepted. System reboot is required for the new configuration to take effect.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/antenna-hub/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"antenna-hub",
														"disable"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "No Content. The antenna-hub is already in this configuration.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/antenna-hub/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"antenna-hub",
														"disable"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found. This feature is unavailable on this reader model.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/antenna-hub/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"antenna-hub",
														"disable"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve antenna-hub information.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/system/antenna-hub?pending=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"antenna-hub"
									],
									"query": [
										{
											"key": "pending",
											"value": "<boolean>",
											"description": "If set to true, the response will reflect the future antenna-hub state after the next reboot.\nThis will differ from the current state when a request to enable or disable the antenna-hub\nfeature has been made.\n"
										}
									]
								},
								"description": "Retrieve the current antenna-hub status, including a list of connected hubs."
							},
							"response": [
								{
									"name": "OK.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/antenna-hub?pending=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"antenna-hub"
											],
											"query": [
												{
													"key": "pending",
													"value": "<boolean>",
													"description": "If set to true, the response will reflect the future antenna-hub state after the next reboot.\nThis will differ from the current state when a request to enable or disable the antenna-hub\nfeature has been made.\n"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"Disabled\",\n  \"antennaHubStates\": [\n    {\n      \"portNumber\": \"<integer>\",\n      \"portStatus\": \"unknown\",\n      \"serialNumber\": \"107B8cfb107B8cfb\"\n    }\n  ]\n}"
								},
								{
									"name": "Not found. This feature is unavailable on this reader model.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/antenna-hub?pending=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"antenna-hub"
											],
											"query": [
												{
													"key": "pending",
													"value": "<boolean>",
													"description": "If set to true, the response will reflect the future antenna-hub state after the next reboot.\nThis will differ from the current state when a request to enable or disable the antenna-hub\nfeature has been made.\n"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "certificates",
					"item": [
						{
							"name": "ca",
							"item": [
								{
									"name": "certs",
									"item": [
										{
											"name": "{certId}",
											"item": [
												{
													"name": "Retrieve CA certificate.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/certificates/ca/certs/:certId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"ca",
																"certs",
																":certId"
															],
															"variable": [
																{
																	"key": "certId",
																	"value": "<integer>"
																}
															]
														},
														"description": "Retrieves certficate information for the specified CA certificate.\n"
													},
													"response": [
														{
															"name": "OK.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/ca/certs/:certId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"ca",
																		"certs",
																		":certId"
																	],
																	"variable": [
																		{
																			"key": "certId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"certId\": \"<integer>\",\n  \"issuer\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"notBefore\": \"<dateTime>\",\n  \"notAfter\": \"<dateTime>\",\n  \"intendedPurposes\": [\n    \"client-authentication\",\n    \"server-authentication\"\n  ]\n}"
														},
														{
															"name": "Not found. The specified certificate ID could not be found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/ca/certs/:certId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"ca",
																		"certs",
																		":certId"
																	],
																	"variable": [
																		{
																			"key": "certId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Remove CA certificate.",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/certificates/ca/certs/:certId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"ca",
																"certs",
																":certId"
															],
															"variable": [
																{
																	"key": "certId",
																	"value": "<integer>"
																}
															]
														},
														"description": "Removes the specified CA certificate from the reader."
													},
													"response": [
														{
															"name": "No Content. The specified certficate was successfully removed from the reader.\n",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/ca/certs/:certId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"ca",
																		"certs",
																		":certId"
																	],
																	"variable": [
																		{
																			"key": "certId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not found. The specified certificate ID could not be found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/ca/certs/:certId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"ca",
																		"certs",
																		":certId"
																	],
																	"variable": [
																		{
																			"key": "certId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve CA certificates.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/certificates/ca/certs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"certificates",
														"ca",
														"certs"
													]
												},
												"description": "Retrieves user-installed CA certificates on the reader which includes Root and\nintermediate CA certificates.\n"
											},
											"response": [
												{
													"name": "OK.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/certificates/ca/certs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"ca",
																"certs"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"certId\": \"<integer>\",\n    \"issuer\": \"<string>\",\n    \"subject\": \"<string>\",\n    \"notBefore\": \"<dateTime>\",\n    \"notAfter\": \"<dateTime>\",\n    \"intendedPurposes\": [\n      \"client-authentication\",\n      \"code-signing\"\n    ]\n  },\n  {\n    \"certId\": \"<integer>\",\n    \"issuer\": \"<string>\",\n    \"subject\": \"<string>\",\n    \"notBefore\": \"<dateTime>\",\n    \"notAfter\": \"<dateTime>\",\n    \"intendedPurposes\": [\n      \"server-authentication\",\n      \"client-authentication\"\n    ]\n  }\n]"
												}
											]
										},
										{
											"name": "Install CA certificates.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "certFile",
															"value": "<string>",
															"description": "(Required) The certificate file to be installed on the reader.",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/system/certificates/ca/certs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"certificates",
														"ca",
														"certs"
													]
												},
												"description": "Installs CA certificates on the reader. Only PEM format is supported.\nIt is possible to install a certificate bundle which contains multiple certificates.\nThe certificates will be automatically validated prior to installing on the reader.\n\nThe certificate ID assigned to each certificate will be returned in the response\nupon successful installation.\n"
											},
											"response": [
												{
													"name": "Ok. The certificates were successfully installed on the reader.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "certFile",
																	"value": "<string>",
																	"description": "(Required) The certificate file to be installed on the reader.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/system/certificates/ca/certs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"ca",
																"certs"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  \"<integer>\",\n  \"<integer>\"\n]"
												},
												{
													"name": "Bad Request. An invalid or malformed certificate was detected. This error response\nis also returned when the number of certificates installed has reached the maximum\nlimit.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "certFile",
																	"value": "<string>",
																	"description": "(Required) The certificate file to be installed on the reader.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/system/certificates/ca/certs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"ca",
																"certs"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Payload Too Large. The reader rejected the file because its filesize is too large.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "certFile",
																	"value": "<string>",
																	"description": "(Required) The certificate file to be installed on the reader.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/system/certificates/ca/certs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"ca",
																"certs"
															]
														}
													},
													"status": "Request Entity Too Large",
													"code": 413,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "cap",
							"item": [
								{
									"name": "certs",
									"item": [
										{
											"name": "{certId}",
											"item": [
												{
													"name": "Retrieve a CAP authentication certificate.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/certificates/cap/certs/:certId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"cap",
																"certs",
																":certId"
															],
															"variable": [
																{
																	"key": "certId",
																	"value": "<integer>"
																}
															]
														},
														"description": "Retrieves certificate information for the specified CAP authentication certificate.\n"
													},
													"response": [
														{
															"name": "OK.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/cap/certs/:certId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"cap",
																		"certs",
																		":certId"
																	],
																	"variable": [
																		{
																			"key": "certId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"certId\": \"<integer>\",\n  \"issuer\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"notBefore\": \"<dateTime>\",\n  \"notAfter\": \"<dateTime>\",\n  \"intendedPurposes\": [\n    \"client-authentication\",\n    \"server-authentication\"\n  ]\n}"
														},
														{
															"name": "Not found. The specified certificate ID could not be found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/cap/certs/:certId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"cap",
																		"certs",
																		":certId"
																	],
																	"variable": [
																		{
																			"key": "certId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Remove CAP authentication certificate.",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/certificates/cap/certs/:certId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"cap",
																"certs",
																":certId"
															],
															"variable": [
																{
																	"key": "certId",
																	"value": "<integer>"
																}
															]
														},
														"description": "Removes the specified CAP authentication certificate from the reader."
													},
													"response": [
														{
															"name": "No Content. The specified certificate was successfully removed from the reader.\n",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/cap/certs/:certId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"cap",
																		"certs",
																		":certId"
																	],
																	"variable": [
																		{
																			"key": "certId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not found. The specified certificate ID could not be found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/cap/certs/:certId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"cap",
																		"certs",
																		":certId"
																	],
																	"variable": [
																		{
																			"key": "certId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve CAP authentication certificates.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/certificates/cap/certs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"certificates",
														"cap",
														"certs"
													]
												},
												"description": "Retrieves all installed CAP authentication certificates on the reader.\nThis may include the default certificate, if it has not been removed.\n"
											},
											"response": [
												{
													"name": "OK.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/certificates/cap/certs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"cap",
																"certs"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"certId\": \"<integer>\",\n    \"issuer\": \"<string>\",\n    \"subject\": \"<string>\",\n    \"notBefore\": \"<dateTime>\",\n    \"notAfter\": \"<dateTime>\",\n    \"intendedPurposes\": [\n      \"client-authentication\",\n      \"code-signing\"\n    ]\n  },\n  {\n    \"certId\": \"<integer>\",\n    \"issuer\": \"<string>\",\n    \"subject\": \"<string>\",\n    \"notBefore\": \"<dateTime>\",\n    \"notAfter\": \"<dateTime>\",\n    \"intendedPurposes\": [\n      \"server-authentication\",\n      \"client-authentication\"\n    ]\n  }\n]"
												}
											]
										},
										{
											"name": "Install CAP authentication certificates.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "certFile",
															"value": "<string>",
															"description": "(Required) The CAP authentication certificate file to be installed on the reader.",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/system/certificates/cap/certs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"certificates",
														"cap",
														"certs"
													]
												},
												"description": "Installs a single CAP authentication certificate on the reader. Only PEM format is supported.\nThe certificate will be validated prior to installing on the reader.\n\nOn success, an array containing a single certificate ID will be returned in the response.\n"
											},
											"response": [
												{
													"name": "Ok. The certificate was successfully installed on the reader.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "certFile",
																	"value": "<string>",
																	"description": "(Required) The CAP authentication certificate file to be installed on the reader.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/system/certificates/cap/certs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"cap",
																"certs"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  \"<integer>\",\n  \"<integer>\"\n]"
												},
												{
													"name": "Bad Request. An invalid or malformed certificate was detected. This error response\nis also returned when the number of certificates installed has reached the maximum\nlimit.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "certFile",
																	"value": "<string>",
																	"description": "(Required) The CAP authentication certificate file to be installed on the reader.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/system/certificates/cap/certs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"cap",
																"certs"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Payload Too Large. The reader rejected the file because its filesize is too large.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "certFile",
																	"value": "<string>",
																	"description": "(Required) The CAP authentication certificate file to be installed on the reader.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/system/certificates/cap/certs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"cap",
																"certs"
															]
														}
													},
													"status": "Request Entity Too Large",
													"code": 413,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "tls",
							"item": [
								{
									"name": "certs",
									"item": [
										{
											"name": "{certId}",
											"item": [
												{
													"name": "Retrieve TLS certficate.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/certificates/tls/certs/:certId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"tls",
																"certs",
																":certId"
															],
															"variable": [
																{
																	"key": "certId",
																	"value": "<integer>"
																}
															]
														},
														"description": "Retrieves TLS certficate information for the specified certificate.\n"
													},
													"response": [
														{
															"name": "OK.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/tls/certs/:certId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"tls",
																		"certs",
																		":certId"
																	],
																	"variable": [
																		{
																			"key": "certId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"certId\": \"<integer>\",\n  \"issuer\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"notBefore\": \"<dateTime>\",\n  \"notAfter\": \"<dateTime>\",\n  \"intendedPurposes\": [\n    \"client-authentication\",\n    \"server-authentication\"\n  ]\n}"
														},
														{
															"name": "Not found. The specified certificate ID could not be found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/tls/certs/:certId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"tls",
																		"certs",
																		":certId"
																	],
																	"variable": [
																		{
																			"key": "certId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Remove TLS certificate.",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/certificates/tls/certs/:certId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"tls",
																"certs",
																":certId"
															],
															"variable": [
																{
																	"key": "certId",
																	"value": "<integer>"
																}
															]
														},
														"description": "Removes the specified certificate from the reader. The private key\nassociated with the certificate will be automatically removed as well.\n"
													},
													"response": [
														{
															"name": "No Content. The specified certificate was successfully removed from the reader.\n",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/tls/certs/:certId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"tls",
																		"certs",
																		":certId"
																	],
																	"variable": [
																		{
																			"key": "certId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not found. The specified certificate ID could not be found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/tls/certs/:certId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"tls",
																		"certs",
																		":certId"
																	],
																	"variable": [
																		{
																			"key": "certId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve TLS certificates.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/certificates/tls/certs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"certificates",
														"tls",
														"certs"
													]
												},
												"description": "Retrieves user-installed TLS certificates on the reader which includes server and client certificates.\n"
											},
											"response": [
												{
													"name": "OK.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/certificates/tls/certs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"tls",
																"certs"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"certId\": \"<integer>\",\n    \"issuer\": \"<string>\",\n    \"subject\": \"<string>\",\n    \"notBefore\": \"<dateTime>\",\n    \"notAfter\": \"<dateTime>\",\n    \"intendedPurposes\": [\n      \"client-authentication\",\n      \"code-signing\"\n    ]\n  },\n  {\n    \"certId\": \"<integer>\",\n    \"issuer\": \"<string>\",\n    \"subject\": \"<string>\",\n    \"notBefore\": \"<dateTime>\",\n    \"notAfter\": \"<dateTime>\",\n    \"intendedPurposes\": [\n      \"server-authentication\",\n      \"client-authentication\"\n    ]\n  }\n]"
												}
											]
										},
										{
											"name": "Install TLS certificate.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "certFile",
															"value": "<string>",
															"description": "(Required) The certificate file to be installed on the reader.",
															"type": "text"
														},
														{
															"key": "password",
															"value": "<string>",
															"description": "The password that was used to create the pkcs12 bundle.",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/system/certificates/tls/certs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"certificates",
														"tls",
														"certs"
													]
												},
												"description": "Installs TLS certificate on the reader using either pkcs12 or PEM format.\n\nWhen installing a certificate using pkcs12 format, the password used to encrypt the\nbundle must be included in the request.\n\nThe certificate ID will be returned in the response upon successful installation.\n"
											},
											"response": [
												{
													"name": "Ok. The certificate was successfully installed on the reader.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "certFile",
																	"value": "<string>",
																	"description": "(Required) The certificate file to be installed on the reader.",
																	"type": "text"
																},
																{
																	"key": "password",
																	"value": "<string>",
																	"description": "The password that was used to create the pkcs12 bundle.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/system/certificates/tls/certs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"tls",
																"certs"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "<integer>"
												},
												{
													"name": "Bad Request. An invalid or malformed certificate was detected. This error response\nis also returned when the number of certificates installed has reached the maximum\nlimit.\nFor pkcs12 format, a wrong password or invalid private key would also result in\nth",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "certFile",
																	"value": "<string>",
																	"description": "(Required) The certificate file to be installed on the reader.",
																	"type": "text"
																},
																{
																	"key": "password",
																	"value": "<string>",
																	"description": "The password that was used to create the pkcs12 bundle.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/system/certificates/tls/certs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"tls",
																"certs"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Payload Too Large. The reader rejected the file because its file size is too large.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "certFile",
																	"value": "<string>",
																	"description": "(Required) The certificate file to be installed on the reader.",
																	"type": "text"
																},
																{
																	"key": "password",
																	"value": "<string>",
																	"description": "The password that was used to create the pkcs12 bundle.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/system/certificates/tls/certs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"tls",
																"certs"
															]
														}
													},
													"status": "Request Entity Too Large",
													"code": 413,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "csr",
									"item": [
										{
											"name": "Create a certificate signing request(CSR).",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subject\": {\n    \"commonName\": \"<string>\",\n    \"country\": \"<string>\",\n    \"state\": \"<string>\",\n    \"locality\": \"<string>\",\n    \"organization\": \"<string>\",\n    \"organizationalUnit\": \"<string>\"\n  },\n  \"subjectAltNames\": [\n    \"h2\",\n    \"Nkrzih\"\n  ],\n  \"keyType\": \"rsa-4096\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/system/certificates/tls/csr",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"certificates",
														"tls",
														"csr"
													]
												},
												"description": "Create a CSR file that could be sent to a Certificate Authority(CA) for certificate issuance.\n"
											},
											"response": [
												{
													"name": "OK.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subject\": {\n    \"commonName\": \"<string>\",\n    \"country\": \"<string>\",\n    \"state\": \"<string>\",\n    \"locality\": \"<string>\",\n    \"organization\": \"<string>\",\n    \"organizationalUnit\": \"<string>\"\n  },\n  \"subjectAltNames\": [\n    \"h2\",\n    \"Nkrzih\"\n  ],\n  \"keyType\": \"rsa-4096\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/system/certificates/tls/csr",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"tls",
																"csr"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Disposition",
															"value": "attachment",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "<string>"
												},
												{
													"name": "Bad Request. The request body contained an invalid configuration setting.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subject\": {\n    \"commonName\": \"<string>\",\n    \"country\": \"<string>\",\n    \"state\": \"<string>\",\n    \"locality\": \"<string>\",\n    \"organization\": \"<string>\",\n    \"organizationalUnit\": \"<string>\"\n  },\n  \"subjectAltNames\": [\n    \"h2\",\n    \"Nkrzih\"\n  ],\n  \"keyType\": \"rsa-4096\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/system/certificates/tls/csr",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"tls",
																"csr"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "services",
									"item": [
										{
											"name": "{tlsService}",
											"item": [
												{
													"name": "Retrieve certificate info for the specified service.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/certificates/tls/services/:tlsService",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"tls",
																"services",
																":tlsService"
															],
															"variable": [
																{
																	"key": "tlsService",
																	"value": "https-server"
																}
															]
														},
														"description": "Retrieves the certificate info for the specified service. If the specified\nservice has not been configured to use a user-installed certificate, a 204\nresponse will be returned.\n"
													},
													"response": [
														{
															"name": "OK.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/tls/services/:tlsService",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"tls",
																		"services",
																		":tlsService"
																	],
																	"variable": [
																		{
																			"key": "tlsService"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"certId\": \"<integer>\",\n  \"issuer\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"notBefore\": \"<dateTime>\",\n  \"notAfter\": \"<dateTime>\",\n  \"intendedPurposes\": [\n    \"client-authentication\",\n    \"server-authentication\"\n  ]\n}"
														},
														{
															"name": "No Content. No certificate info is found for the specified service.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/tls/services/:tlsService",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"tls",
																		"services",
																		":tlsService"
																	],
																	"variable": [
																		{
																			"key": "tlsService"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not found. The specified service could not be found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/tls/services/:tlsService",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"tls",
																		"services",
																		":tlsService"
																	],
																	"variable": [
																		{
																			"key": "tlsService"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Update certificate info for the specified service.",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"certId\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/system/certificates/tls/services/:tlsService",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"certificates",
																"tls",
																"services",
																":tlsService"
															],
															"variable": [
																{
																	"key": "tlsService",
																	"value": "https-server"
																}
															]
														},
														"description": "Updates certificate info for the specified service to use one of the available\ncertificates installed on the reader.\n\nThe extended key usage on the certificate must match the intended usage of the service.\n\nFor example:\nIf the extended key usage on the certificate only have `server authentication` bit set,\nthen the certificate can not be used for 'client authentication' (e.g `mqtt-client`).\n\nIf the extended key usage on the certificate have both `server authentication` and\n'client authentication' bits set, then the certificate could be used for both `https-server`\nand `mqtt-client`.\n\nIf the extended key usage on the certificate is not specified, then the certificate could\nbe used for any purpose that the reader supports.\n"
													},
													"response": [
														{
															"name": "No Content. The certificate info has been successfully updated for the specified service.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"certId\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/tls/services/:tlsService",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"tls",
																		"services",
																		":tlsService"
																	],
																	"variable": [
																		{
																			"key": "tlsService"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request. The request body contained an invalid configuration value.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"certId\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/tls/services/:tlsService",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"tls",
																		"services",
																		":tlsService"
																	],
																	"variable": [
																		{
																			"key": "tlsService"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														},
														{
															"name": "Not found. The specified service could not be found.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"certId\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/system/certificates/tls/services/:tlsService",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"certificates",
																		"tls",
																		"services",
																		":tlsService"
																	],
																	"variable": [
																		{
																			"key": "tlsService"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "cap",
					"item": [
						{
							"name": "installation",
							"item": [
								{
									"name": "Retrieve the current installation configuration settings.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/cap/installation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"cap",
												"installation"
											]
										},
										"description": "Retrieve the current Customer Application (CAP) installation configuration settings."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/cap/installation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"cap",
														"installation"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"mode\": \"Secure\"\n}"
										}
									]
								},
								{
									"name": "Update CAP installation configuration settings.",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mode\": \"Secure\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/cap/installation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"cap",
												"installation"
											]
										},
										"description": "Updates CAP installation configuration settings."
									},
									"response": [
										{
											"name": "No Content. The settings were updated successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"mode\": \"Secure\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/system/cap/installation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"cap",
														"installation"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request. The request body was not understood by the reader.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"mode\": \"Secure\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/system/cap/installation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"cap",
														"installation"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "diagnostics",
					"item": [
						{
							"name": "debug-bundle",
							"item": [
								{
									"name": "Generate and retrieve a diagnostic bundle.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/gzip"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/diagnostics/debug-bundle",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"diagnostics",
												"debug-bundle"
											]
										},
										"description": "Generates and retrieves a diagnostic bundle containing current diagnostic information.\n\nThe bundle contains\n- An index.html file containing information about the bundle, including the time it was\n  generated and the directory structure.\n- The syslog logs\n- The journal logs\n- Core files\n- The RDD buffer\n- OS release information\n- A startup graph\n- Other reader configuration information\nThis bundle is not stored on the reader.\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/gzip"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/diagnostics/debug-bundle",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"diagnostics",
														"debug-bundle"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/gzip"
												},
												{
													"key": "Content-Disposition",
													"value": "attachment",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "<string>"
										}
									]
								}
							]
						},
						{
							"name": "watchdog-bundle",
							"item": [
								{
									"name": "Retrieve diagnostic bundle generated by a watchdog reboot.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/gzip"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/diagnostics/watchdog-bundle",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"diagnostics",
												"watchdog-bundle"
											]
										},
										"description": "Retrieves an existing diagnostic bundle generated before the most recent watchdog reboot, if one exists.\nWhen a watchdog reboot occurs, a bundle is generated from the logs and other reader state\ninformation before the reboot. At most one such bundle can be stored on the reader at a time.\nIf another watchdog reboot occurs when there is already a bundle stored on the reader,\nthe oldest will be overwritten.\nThe information contained in this bundle is a snapshot of the reader state immediately\nbefore the most recent watchdog reboot.\n\nThe bundle contains\n- An index.html file containing information about the bundle, including the time it was\n  generated and its directory structure.\n- The syslog logs\n- The journal logs\n- Core files\n- The RDD buffer\n- OS release information\n- A startup graph\n- Other reader configuration and state information\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/gzip"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/diagnostics/watchdog-bundle",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"diagnostics",
														"watchdog-bundle"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/gzip"
												},
												{
													"key": "Content-Disposition",
													"value": "attachment",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "No Content. No bundle generated by a watchdog reboot found on reader.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/diagnostics/watchdog-bundle",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"diagnostics",
														"watchdog-bundle"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete core files and diagnostic bundle generated by a watchdog reboot.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/system/diagnostics/watchdog-bundle",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"diagnostics",
												"watchdog-bundle"
											]
										},
										"description": "Deletes all core files on the reader and the diagnostic bundle generated by a watchdog reboot, if one exists.\n"
									},
									"response": [
										{
											"name": "Successfully deleted core files and diagnostic bundle.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/diagnostics/watchdog-bundle",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"diagnostics",
														"watchdog-bundle"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "hostname",
					"item": [
						{
							"name": "Retrieve the reader hostname.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/system/hostname",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"hostname"
									]
								},
								"description": "Retrieves the current hostname of the reader. Note that this is not a fully qualified domain name.\n"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/hostname",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"hostname"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"hostname\": \"K-MKfYgpT\"\n}"
								}
							]
						},
						{
							"name": "Update the reader hostname.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"hostname\": \"K-MKfYgpT\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/system/hostname",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"hostname"
									]
								},
								"description": "Updates the reader hostname to the specified value."
							},
							"response": [
								{
									"name": "No Content. The reader's hostname was successfully updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"hostname\": \"K-MKfYgpT\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/hostname",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"hostname"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request. The request body contained an invalid hostname.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"hostname\": \"K-MKfYgpT\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/hostname",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"hostname"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "http",
					"item": [
						{
							"name": "Retrieve the current HTTP server configuration settings.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/system/http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"http"
									]
								},
								"description": "Retrieves the current HTTP server configuration settings."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/http",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"http"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"active\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Update HTTP server configuration settings.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"active\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/system/http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"http"
									]
								},
								"description": "Updates HTTP server configuration settings."
							},
							"response": [
								{
									"name": "No Content. The settings were updated successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/http",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"http"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request. The request body was not understood by the reader.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/http",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"http"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "https",
					"item": [
						{
							"name": "Retrieve the current HTTPS server configuration settings.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/system/https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"https"
									]
								},
								"description": "Retrieves the current HTTPS server configuration settings."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/https",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"https"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"active\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Update HTTPS server configuration settings.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"active\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/system/https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"https"
									]
								},
								"description": "Updates HTTPS server configuration settings."
							},
							"response": [
								{
									"name": "No Content. The settings were updated successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/https",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"https"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request. The request body was not understood by the reader.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/https",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"https"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "image",
					"item": [
						{
							"name": "upgrade",
							"item": [
								{
									"name": "Upload an upgrade file for installation.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "upgradeFile",
													"value": "<string>",
													"description": "(Required) The upgrade file to be installed on the reader.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/system/image/upgrade",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"image",
												"upgrade"
											]
										},
										"description": "In order to perform an upgrade, the upgrade file must be uploaded to the reader using this\nendpoint. Upon successfully uploading an upgrade file to the reader, the reader will\nacknowledge receipt of the upgrade file by issuing a `202: Accepted` response.\n\nFollowing such a response, the client can visit the status URL for the current state of\nthe upgrade operation.\n\nOnce an upgrade file has completed transfer with this endpoint, subsequent requests will\nreceive a response of `409: Conflict` until one of the following conditions is met:\n\n- The upgrade was successfully installed, and the reader is awaiting reboot.\n- The upgrade failed to install.\n\nIf an upgrade has been installed, but the reader has not yet been rebooted, a different\nupgrade file can be installed over the previous upgrade.\n\nAny successfully installed upgrade will take effect the next time the reader is booted.\n"
									},
									"response": [
										{
											"name": "Accepted. The image file was uploaded successfully and is being installed on the reader.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "upgradeFile",
															"value": "<string>",
															"description": "(Required) The upgrade file to be installed on the reader.",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/system/image/upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"image",
														"upgrade"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict. Another upgrade operation is currently running on the reader.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "upgradeFile",
															"value": "<string>",
															"description": "(Required) The upgrade file to be installed on the reader.",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/system/image/upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"image",
														"upgrade"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
										},
										{
											"name": "Payload Too Large. The reader rejected the file because its filesize is too large.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "upgradeFile",
															"value": "<string>",
															"description": "(Required) The upgrade file to be installed on the reader.",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/system/image/upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"image",
														"upgrade"
													]
												}
											},
											"status": "Request Entity Too Large",
											"code": 413,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unsupported Media Type. Data provided was not in multipart/form-data format and could not be parsed.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "upgradeFile",
															"value": "<string>",
															"description": "(Required) The upgrade file to be installed on the reader.",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/system/image/upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"image",
														"upgrade"
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get details about the state of a firmware upgrade.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/image/upgrade",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"image",
												"upgrade"
											]
										},
										"description": "The state of any upgrades occurring on the reader can be monitored from this endpoint.\n\nNote that once an upgrade has reached the `successful` state, it will take effect the next\ntime the reader is booted. The user must trigger the reboot as the reader won't reboot on\nits own.\n"
									},
									"response": [
										{
											"name": "OK. Information about the state of any firmware upgrades will be in the provided upgrade status object.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/image/upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"image",
														"upgrade"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"installing\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve details about the reader's firmware.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/system/image",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"image"
									]
								},
								"description": "A successful `GET` request to this endpoint will return detailed information about the\nfirmware installed on the reader. Properties are omitted for uninstalled or unavailable\npartitions.\n"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"image"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"primaryFirmware\": \"5.2.8.307\",\n  \"primaryCustomer\": \"4.34.484.736\",\n  \"secondaryFirmware\": \"4.6.14.796\",\n  \"secondaryCustomer\": \"731.40.4.3\",\n  \"scmRevision\": \"fE2496b1A9fE2496b1A9fE2496b1A9fE2496b1A9\",\n  \"buildDate\": \"<dateTime>\",\n  \"buildPlan\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "mdns",
					"item": [
						{
							"name": "Retrieve the current mDNS configuration settings.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/system/mdns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"mdns"
									]
								},
								"description": "Retrieve the current mDNS configuration settings."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/mdns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"mdns"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"active\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Update mDNS configuration settings.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"active\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/system/mdns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"mdns"
									]
								},
								"description": "Updates mDNS configuration settings."
							},
							"response": [
								{
									"name": "Accepted. System reboot is required for the new configuration to take effect.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/mdns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"mdns"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "No Content. The settings were updated successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/mdns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"mdns"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request. The request body was not understood by the reader.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/mdns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"mdns"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "network",
					"item": [
						{
							"name": "dns",
							"item": [
								{
									"name": "domains",
									"item": [
										{
											"name": "Retrieve the search domains.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/network/dns/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"network",
														"dns",
														"domains"
													]
												},
												"description": "Retrieves both static and dynamic search domains that are being used by the DNS resolver on the reader.\nDynamic search domains are configured automatically via a DHCP server and static search domains are\nthose configured manually.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/network/dns/domains",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"network",
																"dns",
																"domains"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"staticSearchDomains\": [\n    \"tS1uxxH\",\n    \"mCXn\"\n  ],\n  \"dynamicSearchDomains\": [\n    \"jmQjp5\",\n    \"Ba9cOQd8N6\"\n  ]\n}"
												}
											]
										},
										{
											"name": "Update static search domains used by the reader.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"staticSearchDomains\": [\n    \"tS1uxxH\",\n    \"mCXn\"\n  ],\n  \"dynamicSearchDomains\": [\n    \"jmQjp5\",\n    \"Ba9cOQd8N6\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/system/network/dns/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"network",
														"dns",
														"domains"
													]
												},
												"description": "Updates the static search domains used by the reader.\nUp to 12 static search domains are allowed. It is possible to convert the dynamic\nsearch domains to static search domains by including them on the list to update.\nAn empty list of search domains would indicate that no static search domains should\nbe used and all previously configured search domains should be removed from the\nreader.\n"
											},
											"response": [
												{
													"name": "No Content. The search domains were updated successfully.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"staticSearchDomains\": [\n    \"tS1uxxH\",\n    \"mCXn\"\n  ],\n  \"dynamicSearchDomains\": [\n    \"jmQjp5\",\n    \"Ba9cOQd8N6\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/system/network/dns/domains",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"network",
																"dns",
																"domains"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request. The request body was not understood by the reader.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"staticSearchDomains\": [\n    \"tS1uxxH\",\n    \"mCXn\"\n  ],\n  \"dynamicSearchDomains\": [\n    \"jmQjp5\",\n    \"Ba9cOQd8N6\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/system/network/dns/domains",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"network",
																"dns",
																"domains"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "servers",
									"item": [
										{
											"name": "Retrieve the DNS servers from the reader.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/network/dns/servers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"network",
														"dns",
														"servers"
													]
												},
												"description": "Retrieves both static and dynamic DNS servers that are being used by the DNS resolver on the reader.\nDynamic DNS servers are obtained automatically via a DHCP server and static DNS servers are those\nconfigured manually by users.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/network/dns/servers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"network",
																"dns",
																"servers"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"staticDnsServers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dynamicDnsServers\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the static DNS servers used by the reader.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"staticDnsServers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dynamicDnsServers\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/system/network/dns/servers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"network",
														"dns",
														"servers"
													]
												},
												"description": "Updates the static DNS servers used by the reader.\nUp to 12 static DNS servers are allowed. It is possible to convert dynamic\nDNS servers to static DNS servers by including them on the list to update.\nAn empty list of DNS servers would indicate that no static DNS server should\nbe used and all previously configured DNS servers should be removed from the\nreader.\n"
											},
											"response": [
												{
													"name": "No Content. The static DNS servers were updated successfully.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"staticDnsServers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dynamicDnsServers\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/system/network/dns/servers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"network",
																"dns",
																"servers"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request. The request body was not understood by the reader.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"staticDnsServers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dynamicDnsServers\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/system/network/dns/servers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"network",
																"dns",
																"servers"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "interfaces",
							"item": [
								{
									"name": "{interfaceId}",
									"item": [
										{
											"name": "{networkProtocol}",
											"item": [
												{
													"name": "configuration",
													"item": [
														{
															"name": "Retrieve the current configuration of a network interface.",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/:networkProtocol/configuration",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"network",
																		"interfaces",
																		":interfaceId",
																		":networkProtocol",
																		"configuration"
																	],
																	"variable": [
																		{
																			"key": "interfaceId",
																			"value": "<integer>"
																		},
																		{
																			"key": "networkProtocol",
																			"value": "ipv6"
																		}
																	]
																},
																"description": "Retrieves the current IPv4 or IPv6 configuration of the specified interface.\nThe `networkProtocol` parameter indicates a specific Network Protocol version of the\nconfiguration to retrieve.\n"
															},
															"response": [
																{
																	"name": "OK.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/:networkProtocol/configuration",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"system",
																				"network",
																				"interfaces",
																				":interfaceId",
																				":networkProtocol",
																				"configuration"
																			],
																			"variable": [
																				{
																					"key": "interfaceId"
																				},
																				{
																					"key": "networkProtocol"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"addressMode\": \"static\",\n  \"staticAddress\": \"<string>\",\n  \"staticPrefix\": \"<integer>\",\n  \"staticGateway\": \"<string>\"\n}"
																},
																{
																	"name": "Not found. The specified network interface or protocol could not be found.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/:networkProtocol/configuration",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"system",
																				"network",
																				"interfaces",
																				":interfaceId",
																				":networkProtocol",
																				"configuration"
																			],
																			"variable": [
																				{
																					"key": "interfaceId"
																				},
																				{
																					"key": "networkProtocol"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Update the IP configuration of a network interface.",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"addressMode\": \"static\",\n  \"staticAddress\": \"<string>\",\n  \"staticPrefix\": \"<integer>\",\n  \"staticGateway\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/:networkProtocol/configuration",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"network",
																		"interfaces",
																		":interfaceId",
																		":networkProtocol",
																		"configuration"
																	],
																	"variable": [
																		{
																			"key": "interfaceId",
																			"value": "<integer>"
																		},
																		{
																			"key": "networkProtocol",
																			"value": "ipv6"
																		}
																	]
																},
																"description": "Updates IPv4 or IPv6 configuration for the specified interface. This endpoint\ncould be used to change the addressing mode between dynamic and static as well as\nsetting the static IP address, prefix length, and gateway.\n"
															},
															"response": [
																{
																	"name": "Accepted. The IP configuration for the interface was updated successfully.\nSystem reboot is required for the new configuration to take effect.\n",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"addressMode\": \"static\",\n  \"staticAddress\": \"<string>\",\n  \"staticPrefix\": \"<integer>\",\n  \"staticGateway\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/:networkProtocol/configuration",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"system",
																				"network",
																				"interfaces",
																				":interfaceId",
																				":networkProtocol",
																				"configuration"
																			],
																			"variable": [
																				{
																					"key": "interfaceId"
																				},
																				{
																					"key": "networkProtocol"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Bad Request. The request body contained a request the server could not understand.\n",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"addressMode\": \"static\",\n  \"staticAddress\": \"<string>\",\n  \"staticPrefix\": \"<integer>\",\n  \"staticGateway\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/:networkProtocol/configuration",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"system",
																				"network",
																				"interfaces",
																				":interfaceId",
																				":networkProtocol",
																				"configuration"
																			],
																			"variable": [
																				{
																					"key": "interfaceId"
																				},
																				{
																					"key": "networkProtocol"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
																},
																{
																	"name": "Not found. The specified network interface or protocol could not be found.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"addressMode\": \"static\",\n  \"staticAddress\": \"<string>\",\n  \"staticPrefix\": \"<integer>\",\n  \"staticGateway\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/:networkProtocol/configuration",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"system",
																				"network",
																				"interfaces",
																				":interfaceId",
																				":networkProtocol",
																				"configuration"
																			],
																			"variable": [
																				{
																					"key": "interfaceId"
																				},
																				{
																					"key": "networkProtocol"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "wlan",
											"item": [
												{
													"name": "access-points",
													"item": [
														{
															"name": "Retrieve a list of the available access points using the specified network interface.",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/wlan/access-points",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"network",
																		"interfaces",
																		":interfaceId",
																		"wlan",
																		"access-points"
																	],
																	"variable": [
																		{
																			"key": "interfaceId",
																			"value": "<integer>"
																		}
																	]
																},
																"description": "Scan for access points using the specified network interface and return a list of available access points\nalong with related information.\n"
															},
															"response": [
																{
																	"name": "OK.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/wlan/access-points",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"system",
																				"network",
																				"interfaces",
																				":interfaceId",
																				"wlan",
																				"access-points"
																			],
																			"variable": [
																				{
																					"key": "interfaceId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"ssid\": \"<string>\",\n    \"hardwareAddress\": \"0A:d7:43:28:5f:a7\",\n    \"securityType\": \"WPA2\",\n    \"mode\": \"infra\",\n    \"strength\": \"<integer>\",\n    \"frequency\": \"<integer>\",\n    \"maxBitrate\": \"<integer>\"\n  },\n  {\n    \"ssid\": \"<string>\",\n    \"hardwareAddress\": \"B6:5C:72:A3:02:c2\",\n    \"securityType\": \"None\",\n    \"mode\": \"mesh\",\n    \"strength\": \"<integer>\",\n    \"frequency\": \"<integer>\",\n    \"maxBitrate\": \"<integer>\"\n  }\n]"
																},
																{
																	"name": "Not found. The specified network interface could not be found, or the specified interface\ndoes not support this operation.\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/wlan/access-points",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"system",
																				"network",
																				"interfaces",
																				":interfaceId",
																				"wlan",
																				"access-points"
																			],
																			"variable": [
																				{
																					"key": "interfaceId"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "connection",
													"item": [
														{
															"name": "Retrieve the current WLAN connection status.",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/wlan/connection",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"network",
																		"interfaces",
																		":interfaceId",
																		"wlan",
																		"connection"
																	],
																	"variable": [
																		{
																			"key": "interfaceId",
																			"value": "<integer>"
																		}
																	]
																},
																"description": "Retrieves the current WLAN connection status.\n"
															},
															"response": [
																{
																	"name": "OK.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/wlan/connection",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"system",
																				"network",
																				"interfaces",
																				":interfaceId",
																				"wlan",
																				"connection"
																			],
																			"variable": [
																				{
																					"key": "interfaceId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"status\": \"unknown\",\n  \"ssid\": \"<string>\"\n}"
																},
																{
																	"name": "Not found. The specified network interface could not be found, or the specified interface\ndoesn't support such an operation.\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/wlan/connection",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"system",
																				"network",
																				"interfaces",
																				":interfaceId",
																				"wlan",
																				"connection"
																			],
																			"variable": [
																				{
																					"key": "interfaceId"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Request a connection to the specified access point.",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"ssid\": \"<string>\",\n  \"password\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/wlan/connection",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"network",
																		"interfaces",
																		":interfaceId",
																		"wlan",
																		"connection"
																	],
																	"variable": [
																		{
																			"key": "interfaceId",
																			"value": "<integer>"
																		}
																	]
																},
																"description": "Request a network connection to the specified access point using the specified SSID and a password.\n"
															},
															"response": [
																{
																	"name": "Accepted. Connection request has begun.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"ssid\": \"<string>\",\n  \"password\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/wlan/connection",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"system",
																				"network",
																				"interfaces",
																				":interfaceId",
																				"wlan",
																				"connection"
																			],
																			"variable": [
																				{
																					"key": "interfaceId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Bad Request. The access point credentials are incorrect, or the request body contained an\ninvalid configuration.\n",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"ssid\": \"<string>\",\n  \"password\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/wlan/connection",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"system",
																				"network",
																				"interfaces",
																				":interfaceId",
																				"wlan",
																				"connection"
																			],
																			"variable": [
																				{
																					"key": "interfaceId"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
																},
																{
																	"name": "Not found. The specified network interface could not be found, or the specified interface\ndoesn't support such an operation.\n",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"ssid\": \"<string>\",\n  \"password\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId/wlan/connection",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"system",
																				"network",
																				"interfaces",
																				":interfaceId",
																				"wlan",
																				"connection"
																			],
																			"variable": [
																				{
																					"key": "interfaceId"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "Retrieve the specified network interface state.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId?pending=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"network",
														"interfaces",
														":interfaceId"
													],
													"query": [
														{
															"key": "pending",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "interfaceId",
															"value": "<integer>"
														}
													]
												},
												"description": "Retrieves the specified network interface state.\n"
											},
											"response": [
												{
													"name": "OK.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId?pending=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"network",
																"interfaces",
																":interfaceId"
															],
															"query": [
																{
																	"key": "pending",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "interfaceId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"interfaceId\": \"<integer>\",\n  \"interfaceType\": \"wlan\",\n  \"interfaceName\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"status\": \"disconnected\",\n  \"networkAddress\": [\n    {\n      \"protocol\": \"ipv4\",\n      \"addressMode\": \"static\",\n      \"address\": \"<string>\",\n      \"prefix\": \"<integer>\",\n      \"gateway\": \"<string>\"\n    },\n    {\n      \"protocol\": \"ipv4\",\n      \"addressMode\": \"dynamic\",\n      \"address\": \"<string>\",\n      \"prefix\": \"<integer>\",\n      \"gateway\": \"<string>\"\n    }\n  ],\n  \"hardwareAddress\": \"b0:d7:4a:b0:E4:9B\",\n  \"pending\": \"<boolean>\"\n}"
												},
												{
													"name": "No Content. No pending status was available.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId?pending=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"network",
																"interfaces",
																":interfaceId"
															],
															"query": [
																{
																	"key": "pending",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "interfaceId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request. Invalid query parameter or value.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId?pending=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"network",
																"interfaces",
																":interfaceId"
															],
															"query": [
																{
																	"key": "pending",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "interfaceId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Not found. The specified network interface could not be found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId?pending=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"network",
																"interfaces",
																":interfaceId"
															],
															"query": [
																{
																	"key": "pending",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "interfaceId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Enable the specified network interface.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"network",
														"interfaces",
														":interfaceId"
													],
													"variable": [
														{
															"key": "interfaceId",
															"value": "<integer>"
														}
													]
												},
												"description": "Enable the specified network interface. There can be only one enabled and active interface at a time.\nA reboot is required for the change to take effect. Until the reader is rebooted, the previous enabled\ninterface will stay active.\nEnabling one interface will automatically disable the other interface after the reader reboot.\n"
											},
											"response": [
												{
													"name": "OK. A system reboot is required for the new configurations to take effect.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"network",
																"interfaces",
																":interfaceId"
															],
															"variable": [
																{
																	"key": "interfaceId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request. The request body contained invalid network interface settings.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"network",
																"interfaces",
																":interfaceId"
															],
															"variable": [
																{
																	"key": "interfaceId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden. The request is not valid for the specified interface. A WLAN connection is required to be established\nbefore enabling its network interface.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"network",
																"interfaces",
																":interfaceId"
															],
															"variable": [
																{
																	"key": "interfaceId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Not found. The specified network interface could not be found.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/system/network/interfaces/:interfaceId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"network",
																"interfaces",
																":interfaceId"
															],
															"variable": [
																{
																	"key": "interfaceId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve the current network information for all interfaces.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/network/interfaces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"network",
												"interfaces"
											]
										},
										"description": "Retrieves the available network interfaces and their current network information.\n"
									},
									"response": [
										{
											"name": "OK.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/network/interfaces",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"network",
														"interfaces"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"interfaceId\": \"<integer>\",\n    \"interfaceType\": \"wlan\",\n    \"interfaceName\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"status\": \"disconnected\",\n    \"networkAddress\": [\n      {\n        \"protocol\": \"ipv4\",\n        \"addressMode\": \"static\",\n        \"address\": \"<string>\",\n        \"prefix\": \"<integer>\",\n        \"gateway\": \"<string>\"\n      },\n      {\n        \"protocol\": \"ipv4\",\n        \"addressMode\": \"static\",\n        \"address\": \"<string>\",\n        \"prefix\": \"<integer>\",\n        \"gateway\": \"<string>\"\n      }\n    ],\n    \"hardwareAddress\": \"1D:Eb:Ba:BC:Ff:fe\",\n    \"pending\": \"<boolean>\"\n  },\n  {\n    \"interfaceId\": \"<integer>\",\n    \"interfaceType\": \"eth\",\n    \"interfaceName\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"status\": \"disconnected\",\n    \"networkAddress\": [\n      {\n        \"protocol\": \"ipv6\",\n        \"addressMode\": \"static\",\n        \"address\": \"<string>\",\n        \"prefix\": \"<integer>\",\n        \"gateway\": \"<string>\"\n      },\n      {\n        \"protocol\": \"ipv4\",\n        \"addressMode\": \"static\",\n        \"address\": \"<string>\",\n        \"prefix\": \"<integer>\",\n        \"gateway\": \"<string>\"\n      }\n    ],\n    \"hardwareAddress\": \"48:9B:C2:7c:f2:Bd\",\n    \"pending\": \"<boolean>\"\n  }\n]"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "power",
					"item": [
						{
							"name": "Retrieve the current power configuration.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/system/power",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"power"
									]
								},
								"description": "Retrieves the current power configuration on the reader."
							},
							"response": [
								{
									"name": "OK.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/power",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"power"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"powerSource\": \"auto\",\n  \"allocatedPowerMilliwatts\": \"<integer>\"\n}"
								}
							]
						},
						{
							"name": "Configure the power source.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"powerSource\": \"poeplus\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/system/power",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"power"
									]
								},
								"description": "Configures the power source to the specified value for the reader."
							},
							"response": [
								{
									"name": "Accepted. System reboot is required for the new configuration to take effect.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"powerSource\": \"poeplus\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/power",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"power"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "No Content. The provided power source was already configured on the reader.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"powerSource\": \"poeplus\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/power",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"power"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request. The request body contained invalid power configuration settings.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"powerSource\": \"poeplus\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/power",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"power"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "region",
					"item": [
						{
							"name": "Retrieve region information.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/system/region",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"region"
									]
								},
								"description": "Retrieves the current operating region and a list of selectable regions for the reader.\n"
							},
							"response": [
								{
									"name": "OK.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/region",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"region"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"operatingRegion\": \"<string>\",\n  \"selectableRegions\": [\n    \"<string>\"\n  ]\n}"
								}
							]
						},
						{
							"name": "Configure the operating region.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operatingRegion\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/system/region",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"region"
									]
								},
								"description": "Configures the reader operating region to the specified region. This operation changes the reader\nRF settings. The operating region must match the country/region of operation to comply with local laws\nand regulations.\n"
							},
							"response": [
								{
									"name": "Accepted. System reboot is required for the new configuration to take effect.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operatingRegion\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/region",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"region"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "No Content. The provided region was already configured on the reader.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operatingRegion\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/region",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"region"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request. The request body contained an invalid operating region or format\nthat does not match the expected schema.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operatingRegion\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/region",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"region"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "reboot",
					"item": [
						{
							"name": "Reboot the system.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/system/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"reboot"
									]
								},
								"description": "A call to this endpoint will cause the system to reboot. Once this request is issued, subsequent calls to\nany endpoint will fail until the system is again available to service requests.\n\nIf an upgrade has been installed on the system, the reader will boot into the newly installed firmware image.\n"
							},
							"response": [
								{
									"name": "Accepted. The system has begun the shutdown and startup process.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/reboot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"reboot"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "rfid",
					"item": [
						{
							"name": "llrp",
							"item": [
								{
									"name": "Retrieve LLRP status.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/rfid/llrp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"rfid",
												"llrp"
											]
										},
										"description": "Retrieves the current status of the LLRP interface."
									},
									"response": [
										{
											"name": "OK.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/rfid/llrp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"rfid",
														"llrp"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"llrpRfidStatus\": \"idle\",\n  \"llrpConnection\": {\n    \"status\": \"connected\",\n    \"peerAddress\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Not Found. This endpoint is only available when RFID interface is set to LLRP.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/rfid/llrp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"rfid",
														"llrp"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "interface",
							"item": [
								{
									"name": "Retrieve the reader API.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/rfid/interface",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"rfid",
												"interface"
											]
										},
										"description": "Retrieves the application programming interface (API) that is currently being used\nto control the reader RFID operations.\n"
									},
									"response": [
										{
											"name": "OK.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/rfid/interface",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"rfid",
														"interface"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"rfidInterface\": \"llrp\"\n}"
										}
									]
								},
								{
									"name": "Configure the reader API.",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"rfidInterface\": \"llrp\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/rfid/interface",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"rfid",
												"interface"
											]
										},
										"description": "Configures the application programming interface (API) that will be used to control the\nreader RFID operations.\n"
									},
									"response": [
										{
											"name": "No Content. The provided interface was successfully enabled on the reader.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"rfidInterface\": \"llrp\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/system/rfid/interface",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"rfid",
														"interface"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request. The request body contained an invalid interface.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"rfidInterface\": \"llrp\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/system/rfid/interface",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"rfid",
														"interface"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "time",
					"item": [
						{
							"name": "ntp",
							"item": [
								{
									"name": "servers",
									"item": [
										{
											"name": "{serverId}",
											"item": [
												{
													"name": "Retrieve details on a specific NTP server.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/time/ntp/servers/:serverId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"time",
																"ntp",
																"servers",
																":serverId"
															],
															"variable": [
																{
																	"key": "serverId",
																	"value": "<integer>"
																}
															]
														},
														"description": "Retrieves details on a specific NTP server."
													},
													"response": [
														{
															"name": "OK.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/time/ntp/servers/:serverId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"time",
																		"ntp",
																		"servers",
																		":serverId"
																	],
																	"variable": [
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"serverId\": \"<integer>\",\n  \"server\": \"<string>\",\n  \"serverType\": \"dynamic\",\n  \"status\": \"synchronized\",\n  \"poll\": \"<integer>\",\n  \"stratum\": \"<integer>\",\n  \"reach\": \"<integer>\",\n  \"lastRx\": \"<string>\",\n  \"offset\": \"<string>\"\n}"
														},
														{
															"name": "Not found. The NTP server with the specified ID was not found on the reader.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/time/ntp/servers/:serverId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"time",
																		"ntp",
																		"servers",
																		":serverId"
																	],
																	"variable": [
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Remove a static NTP server.",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/time/ntp/servers/:serverId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"time",
																"ntp",
																"servers",
																":serverId"
															],
															"variable": [
																{
																	"key": "serverId",
																	"value": "<integer>"
																}
															]
														},
														"description": "Removes a static NTP server from the reader. Note that dynamic NTP servers connot\nbe removed. Both static and dynamic servers could be used together to improve the\nreliability and accuracy of the system time.\n"
													},
													"response": [
														{
															"name": "OK. The specified NTP server entry was removed from the reader and its info is returned in the response.\n",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/time/ntp/servers/:serverId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"time",
																		"ntp",
																		"servers",
																		":serverId"
																	],
																	"variable": [
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"serverId\": \"<integer>\",\n  \"server\": \"<string>\",\n  \"serverType\": \"dynamic\",\n  \"status\": \"synchronized\",\n  \"poll\": \"<integer>\",\n  \"stratum\": \"<integer>\",\n  \"reach\": \"<integer>\",\n  \"lastRx\": \"<string>\",\n  \"offset\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden. The server is dynamic and cannot be removed from the reader.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/time/ntp/servers/:serverId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"time",
																		"ntp",
																		"servers",
																		":serverId"
																	],
																	"variable": [
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														},
														{
															"name": "Not found. A static NTP server with the specified ID could not be found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/system/time/ntp/servers/:serverId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"system",
																		"time",
																		"ntp",
																		"servers",
																		":serverId"
																	],
																	"variable": [
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve NTP servers.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/time/ntp/servers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"time",
														"ntp",
														"servers"
													]
												},
												"description": "Retrieves NTP servers currently being used on the reader. These servers could be either statically\nconfigured or dynamically discovered via a DHCP server.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/system/time/ntp/servers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"time",
																"ntp",
																"servers"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"serverId\": \"<integer>\",\n    \"server\": \"<string>\",\n    \"serverType\": \"static\"\n  },\n  {\n    \"serverId\": \"<integer>\",\n    \"server\": \"<string>\",\n    \"serverType\": \"dynamic\"\n  }\n]"
												}
											]
										},
										{
											"name": "Add a static NTP server.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"server\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/system/time/ntp/servers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"time",
														"ntp",
														"servers"
													]
												},
												"description": "Adds a static NTP server to the reader. A NTP server can be specified by either hostname\nor IP address. The newly created NTP server object is returned upon a successful completion.\nThe reader allows up to 6 static NTP servers.\n"
											},
											"response": [
												{
													"name": "Created. The NTP server was successfully added to the reader.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"server\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/system/time/ntp/servers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"time",
																"ntp",
																"servers"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"serverId\": \"<integer>\",\n  \"server\": \"<string>\",\n  \"serverType\": \"static\"\n}"
												},
												{
													"name": "Bad Request. The request body was not understood by the server.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"server\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/system/time/ntp/servers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"system",
																"time",
																"ntp",
																"servers"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve the current state of the NTP service.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/time/ntp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"time",
												"ntp"
											]
										},
										"description": "Retrieves the current state of the NTP (Network Time Protocol) service on the reader.\nNTP service is responsible for synchronizing the system time on the reader with external\nNTP servers in order to keep the system time accurate and synchronized with other devices\non the network.\n"
									},
									"response": [
										{
											"name": "OK.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/system/time/ntp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"time",
														"ntp"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"unsynchronized\"\n}"
										}
									]
								},
								{
									"name": "Configure the NTP service.",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/time/ntp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"time",
												"ntp"
											]
										},
										"description": "Configures the NTP service on the reader."
									},
									"response": [
										{
											"name": "No Content. The NTP service configuration was successfully updated on the reader.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"active\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/system/time/ntp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"time",
														"ntp"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request. The request body contained a setting the server could not understand.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"active\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/system/time/ntp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"system",
														"time",
														"ntp"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve information about system time and uptime.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/system/time",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"time"
									]
								},
								"description": "Retrieves information about system time and uptime.\nSystem time is in UTC and RFC-3339 compliant format.\nUptime indicates how long the system has been running in seconds.\n"
							},
							"response": [
								{
									"name": "OK.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/system/time",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"time"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"systemTime\": \"<dateTime>\",\n  \"upTime\": \"<integer>\"\n}"
								}
							]
						},
						{
							"name": "Update the system time.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"systemTime\": \"9789-45-68T46:32:98\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/system/time",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"time"
									]
								},
								"description": "Updates the system time if NTP is disabled. If NTP is enabled,\nan error is returned.\n"
							},
							"response": [
								{
									"name": "No Content. The provided system time was successfully updated on the reader.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"systemTime\": \"9789-45-68T46:32:98\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/time",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"time"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request. The request body contained a system time that the server could not understand.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"systemTime\": \"9789-45-68T46:32:98\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/time",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"time"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Conflict. Manual setting of system time is not available while NTP is enabled.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"systemTime\": \"9789-45-68T46:32:98\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/system/time",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"system",
												"time"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"invalidPropertyId\": \"<string>\",\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve details about the reader hardware.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/system",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"system"
							]
						},
						"description": "Retrieve details about the reader hardware."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/system",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"productModel\": \"<string>\",\n  \"manufacturer\": \"<string>\",\n  \"productDescription\": \"<string>\",\n  \"productSku\": \"<string>\",\n  \"productHla\": \"<string>\",\n  \"pcba\": \"<string>\",\n  \"serialNumber\": \"<string>\"\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "{{basicAuthUsername}}",
				"type": "string"
			},
			{
				"key": "password",
				"value": "{{basicAuthPassword}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "/api/v1"
		}
	]
}